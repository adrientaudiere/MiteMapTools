[{"path":"https://adrientaudiere.github.io/MiteMapTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Adrien Taudière Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrien Taudière. Author, maintainer, copyright holder. Lise Roy. Author.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taudière , Roy L (2025). MiteMapTools: Import, Filter Visualize Data Mitemap. R package version 0.0.2, https://adrientaudiere.github.io/MiteMapTools/.","code":"@Manual{,   title = {MiteMapTools: Import, Filter and Visualize Data from Mitemap},   author = {Adrien Taudière and Lise Roy},   year = {2025},   note = {R package version 0.0.2},   url = {https://adrientaudiere.github.io/MiteMapTools/}, }"},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"mitemaptools","dir":"","previous_headings":"","what":"Import, Filter and Visualize Data from Mitemap","title":"Import, Filter and Visualize Data from Mitemap","text":"MiteMapTools comprehensive R package importing, analyzing, visualizing movement data MiteMap tracking systems. MiteMap cost-effective, open-source tool 2D behavioral tracking arthropods, particularly useful studying chemotactic responses movement patterns controlled laboratory settings.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"about-mitemap","dir":"","previous_headings":"","what":"About MiteMap","title":"Import, Filter and Visualize Data from Mitemap","text":"MiteMap Raspberry Pi-based automated tracking system designed monitor arthropod behavior circular arenas. system uses infrared imaging track individual organisms high temporal resolution (position recorded every 0.2 seconds) spatial precision. technology enables researchers study: Chemotactic behavior: arthropods respond attractive repulsive volatile compounds Movement patterns: Analysis trajectory complexity, speed, spatial preferences Zone preferences: Time allocation different arena regions Behavioral states: Periods activity vs. immobility system consists circular arena (typically 40mm diameter) test subjects placed potential stimuli positioned arena periphery. High-resolution tracking data allows detailed quantitative analysis behavioral responses.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"scientific-background","dir":"","previous_headings":"","what":"Scientific Background","title":"Import, Filter and Visualize Data from Mitemap","text":"package implements methods described : Masier, L.‐S., Roy, L., & Durand, J.‐F. (2022). new methodology arthropod behavioral assays using MiteMap, cost‐effective open‐source tool 2D tracking. Journal Experimental Zoology Part : Ecological Integrative Physiology, 337(4), 333-344. doi:10.1002/jez.2651 original MiteMap hardware software can found : https://github.com/LR69/MiteMap/tree/MiteMap.v6","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Import, Filter and Visualize Data from Mitemap","text":"Data Import: Seamlessly import MiteMap data zip archives containing raw tracking files metadata Data Filtering: Clean tracking data removing artifacts, centering coordinates, filtering time/space constraints Behavioral Analysis: Calculate metrics like zone preferences, movement speeds, immobility periods Visualization: Create publication-ready plots including trajectory maps, heatmaps, statistical summaries Statistical Testing: Built-functions binomial tests zone preferences multiple comparison corrections Multiple Data Formats: Support raw positional data processed zone metrics (HH CH formats)","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"data-formats","dir":"","previous_headings":"","what":"Data Formats","title":"Import, Filter and Visualize Data from Mitemap","text":"Raw Tracking Data comprised : High-resolution positional data columns: - Time (seconds, recorded every 0.2s) - X coordinate (mm) - Y coordinate (mm) [MiteMapTools::import_mitemap()] computes summary metrics including presence defined zones (HH CH formats, see figure @ref(fig:shape)):","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"hh-format-half-half","dir":"","previous_headings":"Data Formats","what":"HH Format (Half-Half)","title":"Import, Filter and Visualize Data from Mitemap","text":"Arena divided line odor source, computing: - Time spent half - Distance traveled zone - Immobility time zone","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"ch-format-circle-half","dir":"","previous_headings":"Data Formats","what":"CH Format (Circle-Half)","title":"Import, Filter and Visualize Data from Mitemap","text":"Arena divided circle centered odor source, encompassing half arena surface: - Time spent inside/outside circle - Movement metrics zone - Behavioral preference indices","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import, Filter and Visualize Data from Mitemap","text":"can install development version MiteMapTools GitHub :","code":"# install.packages(\"pak\") pak::pak(\"adrientaudiere/MiteMapTools\")"},{"path":[]},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"data-import-and-filtering","dir":"","previous_headings":"Basic Usage","what":"Data Import and Filtering","title":"Import, Filter and Visualize Data from Mitemap","text":"basic example showing filter visualize MiteMap data:","code":"library(MiteMapTools) #> Le chargement a nécessité le package : tidyverse #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.2 #> ✔ ggplot2   4.0.0     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors #> Le chargement a nécessité le package : readxl #>  #> Le chargement a nécessité le package : conflicted  # Import MiteMap from folders MM <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column = \"File (mite ID)\", verbose = FALSE, clean = TRUE )  # Create violin plots showing position distributions by experimental condition vioplot_mitemap(MM, \"Treatment\", prop_points = 0.1)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"data-structure-requirements","dir":"","previous_headings":"Basic Usage","what":"Data Structure Requirements","title":"Import, Filter and Visualize Data from Mitemap","text":"MiteMap experiment folder contain:","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"data-structure-requirements-1","dir":"","previous_headings":"Basic Usage","what":"Data Structure Requirements","title":"Import, Filter and Visualize Data from Mitemap","text":"MiteMap experiment folder contain: 1. Zip archives containing least 2 files: - Raw data CSV: 3-columns tracking data - Time seconds (recorded every 0.2s) - X position (mm) - Y position (mm) - PNG heatmap: Visual representation movement patterns 2. Metadata file (Excel .xlsx CSV format, optional) 1 required column: - File_name: Must match corresponding zip file names. can use column name parameter file_name_column [import_mitemap()].","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/index.html","id":"arena-layout-and-zone-definitions","dir":"","previous_headings":"Basic Usage","what":"Arena Layout and Zone Definitions","title":"Import, Filter and Visualize Data from Mitemap","text":"following diagram illustrates arena divided HH CH zone computations:","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/HH_example.html","id":null,"dir":"Reference","previous_headings":"","what":"example dataset from MiteMapTools for shape Half-half — HH_example","title":"example dataset from MiteMapTools for shape Half-half — HH_example","text":"Obtained using code : mm_HH <- suppressWarnings(import_mitemap(system.file(\"extdata\", \"POUL6\", package = \"MiteMapTools\"), type_of_files = \"HH\"))","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/HH_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example dataset from MiteMapTools for shape Half-half — HH_example","text":"","code":"data(HH_example)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/HH_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"example dataset from MiteMapTools for shape Half-half — HH_example","text":"list 4 elements resulting_data: (possibly huge) tibble metadata information position x, y time. files_not_in_csv: list files present csv filenames zip files. files_not_in_metada: list files funded metadata. duplicate_file_name_in_metadata: list duplicated file names metadata. resulting_data slot structured 16 columns (fifth ones zip files metadata files). See import_mitemap(). File_name Date hour name MiteMap (can redundant MiteMap_number) Total time spent half containing odor source (second) Total time spent opposite half (second) Time spent immobile half containing odor source (second) Time spent immobile opposite half (second) Total distance traveled half containing odor source (mm) Total distance traveled opposite half (mm) Boolean variable indicating individual remained immobile since last record (1 immobile) Run number Date Start time Farm MiteMap number Bag Modality","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/HH_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example dataset from MiteMapTools for shape Half-half — HH_example","text":"https://onlinelibrary.wiley.com/doi/10.1002/jez.2651","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_data.html","id":null,"dir":"Reference","previous_headings":"","what":"example dataset from MiteMapTools — MM_data","title":"example dataset from MiteMapTools — MM_data","text":"Obtained using code : MM_data <- import_mitemap( system.file(\"extdata\", \"mitemap_example_large\", package = \"MiteMapTools\"), file_name_column = \"File (mite ID)\", verbose = FALSE ) save(MM_data, file=\"data/MM_data.rda\")","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example dataset from MiteMapTools — MM_data","text":"","code":"data(MM_data)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"example dataset from MiteMapTools — MM_data","text":"tibble.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example dataset from MiteMapTools — MM_data","text":"https://onlinelibrary.wiley.com/doi/10.1002/jez.2651","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_example.html","id":null,"dir":"Reference","previous_headings":"","what":"example dataset from MiteMapTools — MM_example","title":"example dataset from MiteMapTools — MM_example","text":"Obtained using code :","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example dataset from MiteMapTools — MM_example","text":"","code":"data(MM_example)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"example dataset from MiteMapTools — MM_example","text":"list 4 elements resulting_data: (possibly huge) tibble metadata information position x, y time. files_not_in_csv: list files present csv filenames zip files. files_not_in_metada: list files funded metadata. duplicate_file_name_in_metadata: list duplicated file names metadata. resulting_data slot structured 12 columns (fifth ones zip files metadata files). See import_mitemap(). File_name time second (position recorded every 0.2s) position x (mm) position y (mm) Boolean variable indicating individual remained immobile since last record (1 immobile) Run number Date Start time Farm MiteMap number Bag Modality","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example dataset from MiteMapTools — MM_example","text":"https://onlinelibrary.wiley.com/doi/10.1002/jez.2651","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MM_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"example dataset from MiteMapTools — MM_example","text":"MM_example <- suppressWarnings(import_mitemap(system.file(\"extdata\", \"POUL6\", package = \"MiteMapTools\"))) save(MM_example, file=\"data/MM_example.rda\")","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MiteMapTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MiteMapTools: A toolkit for analyzing arthropod movement data — MiteMapTools-package","title":"MiteMapTools: A toolkit for analyzing arthropod movement data — MiteMapTools-package","text":"MiteMapTools provides comprehensive suite functions importing, processing, analyzing movement data MiteMap tracking systems. MiteMap Raspberry Pi-based automated tracking system designed monitor arthropod behavior controlled 2D arenas.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MiteMapTools-package.html","id":"background","dir":"Reference","previous_headings":"","what":"Background","title":"MiteMapTools: A toolkit for analyzing arthropod movement data — MiteMapTools-package","text":"MiteMap system consists circular arena (typically 40mm diameter) arthropods tracked using infrared imaging. arena can configured attractive repulsive stimuli (e.g., volatile compounds) study chemotactic behavior. Position data recorded high temporal resolution (every 0.2 seconds).","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MiteMapTools-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MiteMapTools: A toolkit for analyzing arthropod movement data — MiteMapTools-package","text":"Masier, L.‐S., Roy, L., & Durand, J.‐F. (2022). new methodology arthropod behavioral assays using MiteMap, cost‐effective open‐source tool 2D tracking. Journal Experimental Zoology Part : Ecological Integrative Physiology, 337(4), 333-344. doi:10.1002/jez.2651","code":""},{"path":[]},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/MiteMapTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MiteMapTools: A toolkit for analyzing arthropod movement data — MiteMapTools-package","text":"Adrien Taudière adrien.taudiere@zaclys.net Lise Roy lise.roy@cefe.cnrs.fr","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"Test binomial MiteMap presence half part odor","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"","code":"binom_test_mitemap(   MiteMap,   factor = NULL,   format = \"HH\",   verbose = TRUE,   p.adjust_method = \"BH\",   level = \"run\",   alternative = \"two.sided\" )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"MiteMap (required) result import_mitemap factor (required, default NULL) column name separate individuals MiteMap data frame (e.g., \"Treatment\"). format (default \"HH\") format left area. \"HH\" Half-Half, \"CH\" Circular-Half. verbose (Logical, default = TRUE) TRUE, function print additional information. p.adjust_method (default \"BH\") method p-adjustement. See stats::p.adjust(). level (default \"run\") level analysis. \"run\" consider run (File_name) one replicate. \"lines\" consider line (.e. temporal point) MiteMap one replicate. level run conservative considers run one independent replicate. Use level \"lines\" carefully introduce high pseudoreplication risk. alternative (default \"two.sided\") alternative hypothesis test. See stats::binom.test().","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"tibble results binomial test","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"test run factor values p-adjustement step. run (filename), proportion points left half calculated. proportion superior 0.5, run considered \"left\", else \"right\". binomial test run test proportion runs \"left\" significantly different 0.5 levels factor. format \"CH\", process done presence circular half rather half part. level \"lines\", line MiteMap considered one replicate (.e. proportion points left half calculated line MiteMap). approach recommended introduce high pseudoreplication risk.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/binom_test_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test binomial on MiteMap for presence in the half part of the odor — binom_test_mitemap","text":"","code":"binom_test_mitemap(MM_data, factor = \"Treatment\") #> Warning: There were 48 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `across(...)`. #> ℹ In group 75: `File_name = \"MM012022_05_17_15h29m25s\"`. #> Caused by warning in `min()`: #> ! no non-missing arguments to min; returning Inf #> ℹ Run dplyr::last_dplyr_warnings() to see the 47 remaining warnings. #> # A tibble: 3 × 8 #>   Treatment     n   yes    no p.value p.value.adj estimate CI            #>   <chr>     <int> <int> <int>   <dbl>       <dbl>    <dbl> <chr>         #> 1 DCM          10     5     5   1           1        0.5   0.187 - 0.813 #> 2 Mix          96    54    42   0.261       0.392    0.562 0.457 - 0.664 #> 3 nothing     120    75    45   0.008       0.024    0.625 0.532 - 0.712 binom_test_mitemap(MM_data, factor = \"Treatment\", format=\"CH\") #> Warning: There were 48 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `across(...)`. #> ℹ In group 75: `File_name = \"MM012022_05_17_15h29m25s\"`. #> Caused by warning in `min()`: #> ! no non-missing arguments to min; returning Inf #> ℹ Run dplyr::last_dplyr_warnings() to see the 47 remaining warnings. #> # A tibble: 3 × 8 #>   Treatment     n   yes    no p.value p.value.adj estimate CI            #>   <chr>     <int> <int> <int>   <dbl>       <dbl>    <dbl> <chr>         #> 1 DCM          10     5     5 1          1            0.5  0.187 - 0.813 #> 2 Mix          96    71    25 0.00001    0.000015     0.74 0.64 - 0.824  #> 3 nothing     120    90    30 0.00001    0.000015     0.75 0.663 - 0.825 binom_test_mitemap(MM_data, factor = \"Treatment\", level=\"lines\") #> Warning: There were 48 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `across(...)`. #> ℹ In group 75: `File_name = \"MM012022_05_17_15h29m25s\"`. #> Caused by warning in `min()`: #> ! no non-missing arguments to min; returning Inf #> ℹ Run dplyr::last_dplyr_warnings() to see the 47 remaining warnings. #> # A tibble: 3 × 8 #>   Treatment     n   yes    no p.value p.value.adj estimate CI            #>   <chr>     <int> <int> <int>   <dbl>       <dbl>    <dbl> <chr>         #> 1 DCM          10  6416  7611 0.00001     0.00001    0.457 0.449 - 0.466 #> 2 Mix          96 62156 72749 0.00001     0.00001    0.461 0.458 - 0.463 #> 3 nothing     120 78416 91702 0.00001     0.00001    0.461 0.459 - 0.463  MM_data |>  filter(Biomol_sp %in% c(\"DGSS\", \"DGL1\", \"D_carpathicus\")) |>   binom_test_mitemap(factor = \"Biomol_sp\") #> Warning: There were 6 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `across(...)`. #> ℹ In group 53: `File_name = \"MM012022_05_18_00h25m45s\"`. #> Caused by warning in `min()`: #> ! no non-missing arguments to min; returning Inf #> ℹ Run dplyr::last_dplyr_warnings() to see the 5 remaining warnings. #> # A tibble: 3 × 8 #>   Biomol_sp         n   yes    no p.value p.value.adj estimate CI            #>   <chr>         <int> <int> <int>   <dbl>       <dbl>    <dbl> <chr>         #> 1 DGL1             18    13     5   0.096       0.288    0.722 0.465 - 0.903 #> 2 DGSS             59    34    25   0.298       0.388    0.576 0.441 - 0.704 #> 3 D_carpathicus    12     8     4   0.388       0.388    0.667 0.349 - 0.901"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map convex hull on MiteMap — convex_hull_mitemap","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"Map convex hull MiteMap","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"","code":"convex_hull_mitemap(   MiteMap,   unity = 1,   tbe = 3,   plot_show = TRUE,   probs_quantile = 0.68,   min_nb_spatial_points = 2,   each_point_count_one = FALSE,   hull_col = \"red\",   plot_center_of_mass = TRUE,   verbose = TRUE )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"MiteMap (required) result import_mitemap unity (default = 1): size square grid mm tbe (default = 3) plot_show (Logical, default = TRUE) : plot mitemap ? probs_quantile (default = 0.68) min_nb_spatial_points : Minimum number spatial point keep sample each_point_count_one (Logical ; default = FALSE) TRUE, spatial point count one time step instead. default, mite stay 3t given spatial location, spatial point count 3 times construction convex hull. hull_col color hull area plot_center_of_mass (Logical, default = TRUE): plot center mass? verbose (Logical, default = TRUE) TRUE, function print additional","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"dataframe convex hull information run (File_name) plot convex hull run plot_show = TRUE.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/convex_hull_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map convex hull on MiteMap — convex_hull_mitemap","text":"","code":"if (FALSE) { # \\dontrun{   ch <- convex_hull_mitemap(MM_data) } # } ch <- convex_hull_mitemap(MM_data, plot_show = FALSE) #> Number of spatial points conserved using tbe = 3: 116 (28.36 %) #> Number of spatial points conserved using tbe = 3: 110 (21.36 %) #> Number of spatial points conserved using tbe = 3: 99 (20.84 %) #> Number of spatial points conserved using tbe = 3: 107 (20.98 %) #> Number of spatial points conserved using tbe = 3: 149 (35.82 %) #> Number of spatial points conserved using tbe = 3: 118 (24.95 %) #> Number of spatial points conserved using tbe = 3: 103 (20.89 %) #> Number of spatial points conserved using tbe = 3: 85 (24.15 %) #> Number of spatial points conserved using tbe = 3: 129 (29.05 %) #> Number of spatial points conserved using tbe = 3: 128 (25.86 %) #> Number of spatial points conserved using tbe = 3: 98 (27.92 %) #> Number of spatial points conserved using tbe = 3: 115 (27.64 %) #> Number of spatial points conserved using tbe = 3: 107 (25.24 %) #> Number of spatial points conserved using tbe = 3: 11 (78.57 %) #> No convex Hull found for sample: MM012022_05_17_10h23m30s (none distance < quantile)  #> Number of spatial points conserved using tbe = 3: 155 (57.84 %) #> Number of spatial points conserved using tbe = 3: 100 (22.62 %) #> Number of spatial points conserved using tbe = 3: 122 (28.77 %) #> Number of spatial points conserved using tbe = 3: 88 (17.89 %) #> Number of spatial points conserved using tbe = 3: 120 (30.15 %) #> Number of spatial points conserved using tbe = 3: 25 (7.65 %) #> Number of spatial points conserved using tbe = 3: 157 (43.37 %) #> Number of spatial points conserved using tbe = 3: 146 (66.97 %) #> Number of spatial points conserved using tbe = 3: 135 (54.66 %) #> Number of spatial points conserved using tbe = 3: 66 (16.71 %) #> Number of spatial points conserved using tbe = 3: 116 (43.12 %) #> Number of spatial points conserved using tbe = 3: 93 (80.87 %) #> Number of spatial points conserved using tbe = 3: 109 (44.31 %) #> Number of spatial points conserved using tbe = 3: 110 (19.71 %) #> Number of spatial points conserved using tbe = 3: 89 (13.82 %) #> Number of spatial points conserved using tbe = 3: 17 (65.38 %) #> Number of spatial points conserved using tbe = 3: 124 (30.85 %) #> Number of spatial points conserved using tbe = 3: 132 (42.17 %) #> Number of spatial points conserved using tbe = 3: 90 (14.15 %) #> Number of spatial points conserved using tbe = 3: 97 (15.57 %) #> Number of spatial points conserved using tbe = 3: 28 (80 %) #> Number of spatial points conserved using tbe = 3: 101 (17.97 %) #> Number of spatial points conserved using tbe = 3: 115 (28.68 %) #> Number of spatial points conserved using tbe = 3: 116 (26.48 %) #> Number of spatial points conserved using tbe = 3: 111 (21.1 %) #> Number of spatial points conserved using tbe = 3: 100 (20.28 %) #> Number of spatial points conserved using tbe = 3: 102 (19.73 %) #> Number of spatial points conserved using tbe = 3: 114 (26.76 %) #> Number of spatial points conserved using tbe = 3: 108 (29.11 %) #> Number of spatial points conserved using tbe = 3: 124 (32.38 %) #> Number of spatial points conserved using tbe = 3: 142 (31.91 %) #> Number of spatial points conserved using tbe = 3: 130 (36.01 %) #> Number of spatial points conserved using tbe = 3: 145 (39.19 %) #> Number of spatial points conserved using tbe = 3: 108 (21.43 %) #> Number of spatial points conserved using tbe = 3: 133 (28 %) #> Number of spatial points conserved using tbe = 3: 176 (54.83 %) #> Number of spatial points conserved using tbe = 3: 167 (52.85 %) #> Number of spatial points conserved using tbe = 3: 149 (59.36 %) #> Number of spatial points conserved using tbe = 3: 126 (26.92 %) #> Number of spatial points conserved using tbe = 3: 107 (87.7 %) #> Number of spatial points conserved using tbe = 3: 117 (26.9 %) #> Number of spatial points conserved using tbe = 3: 124 (72.09 %) #> Number of spatial points conserved using tbe = 3: 102 (22.32 %) #> Number of spatial points conserved using tbe = 3: 74 (33.94 %) #> Number of spatial points conserved using tbe = 3: 108 (73.47 %) #> Number of spatial points conserved using tbe = 3: 111 (26 %) #> Number of spatial points conserved using tbe = 3: 147 (65.92 %) #> Number of spatial points conserved using tbe = 3: 155 (41.55 %) #> Number of spatial points conserved using tbe = 3: 113 (22.42 %) #> Number of spatial points conserved using tbe = 3: 148 (84.57 %) #> Number of spatial points conserved using tbe = 3: 2 (66.67 %) #> No convex Hull found for sample: MM012022_05_17_15h23m58s (none distance < quantile)  #> Number of spatial points conserved using tbe = 3: 101 (19.54 %) #> Number of spatial points conserved using tbe = 3: 57 (77.03 %) #> Number of spatial points conserved using tbe = 3: 121 (85.21 %) #> Number of spatial points conserved using tbe = 3: 105 (21.17 %) #> Number of spatial points conserved using tbe = 3: 96 (15.64 %) #> Number of spatial points conserved using tbe = 3: 146 (42.07 %) #> Number of spatial points conserved using tbe = 3: 122 (37.89 %) #> Number of spatial points conserved using tbe = 3: 148 (38.54 %) #> Number of spatial points conserved using tbe = 3: 118 (22.06 %) #> Number of spatial points conserved using tbe = 3: 3 (100 %) #> Number of spatial points conserved using tbe = 3: 4 (80 %) #> No convex Hull found for sample: MM012022_05_17_15h33m59s (none distance < quantile)  #> Number of spatial points conserved using tbe = 3: 104 (19.55 %) #> Number of spatial points conserved using tbe = 3: 176 (60.27 %) #> Number of spatial points conserved using tbe = 3: 100 (66.23 %) #> Number of spatial points conserved using tbe = 3: 119 (34.39 %) #> Number of spatial points conserved using tbe = 3: 106 (25.48 %) #> Number of spatial points conserved using tbe = 3: 116 (25.55 %) #> Number of spatial points conserved using tbe = 3: 145 (37.76 %) #> Number of spatial points conserved using tbe = 3: 99 (69.23 %) #> Number of spatial points conserved using tbe = 3: 111 (33.33 %) #> Number of spatial points conserved using tbe = 3: 141 (36.81 %) #> Number of spatial points conserved using tbe = 3: 92 (21.05 %) #> Number of spatial points conserved using tbe = 3: 55 (80.88 %) #> Number of spatial points conserved using tbe = 3: 132 (27.1 %) #> Number of spatial points conserved using tbe = 3: 169 (49.85 %) #> Number of spatial points conserved using tbe = 3: 153 (40.8 %) #> Number of spatial points conserved using tbe = 3: 82 (25.08 %) #> Number of spatial points conserved using tbe = 3: 115 (26.93 %) #> Number of spatial points conserved using tbe = 3: 119 (27.67 %) #> Number of spatial points conserved using tbe = 3: 103 (19.07 %) #> Number of spatial points conserved using tbe = 3: 118 (39.46 %) #> Number of spatial points conserved using tbe = 3: 95 (17.21 %) #> Number of spatial points conserved using tbe = 3: 33 (70.21 %) #> Number of spatial points conserved using tbe = 3: 89 (32.96 %) #> Number of spatial points conserved using tbe = 3: 100 (35.09 %) #> Number of spatial points conserved using tbe = 3: 61 (18.89 %) #> Number of spatial points conserved using tbe = 3: 129 (27.45 %) #> Number of spatial points conserved using tbe = 3: 94 (28.83 %) #> Number of spatial points conserved using tbe = 3: 165 (44.35 %) #> Number of spatial points conserved using tbe = 3: 80 (45.71 %) #> Number of spatial points conserved using tbe = 3: 105 (36.46 %) #> Number of spatial points conserved using tbe = 3: 5 (100 %) #> Number of spatial points conserved using tbe = 3: 109 (26.72 %) #> Number of spatial points conserved using tbe = 3: 59 (45.04 %) #> Number of spatial points conserved using tbe = 3: 78 (48.15 %) #> Number of spatial points conserved using tbe = 3: 131 (35.6 %) #> Number of spatial points conserved using tbe = 3: 84 (25.53 %) #> Number of spatial points conserved using tbe = 3: 102 (31.87 %) #> Number of spatial points conserved using tbe = 3: 74 (51.39 %) #> Number of spatial points conserved using tbe = 3: 107 (38.35 %) #> Number of spatial points conserved using tbe = 3: 126 (50.2 %) #> Number of spatial points conserved using tbe = 3: 112 (21.58 %) #> Number of spatial points conserved using tbe = 3: 41 (69.49 %) #> No convex Hull found for sample: MM012022_05_17_20h27m19s (not enough spatial points) #> No convex Hull found for sample: MM012022_05_17_20h27m50s (not enough spatial points) #> Number of spatial points conserved using tbe = 3: 61 (52.14 %) #> Number of spatial points conserved using tbe = 3: 51 (76.12 %) #> Number of spatial points conserved using tbe = 3: 3 (100 %) #> Number of spatial points conserved using tbe = 3: 96 (56.14 %) #> Number of spatial points conserved using tbe = 3: 81 (44.75 %) #> Number of spatial points conserved using tbe = 3: 118 (26.22 %) #> Number of spatial points conserved using tbe = 3: 64 (66.67 %) #> Number of spatial points conserved using tbe = 3: 68 (13.13 %) #> Number of spatial points conserved using tbe = 3: 108 (29.51 %) #> Number of spatial points conserved using tbe = 3: 103 (17.73 %) #> Number of spatial points conserved using tbe = 3: 102 (17.2 %) #> Number of spatial points conserved using tbe = 3: 113 (24.2 %) #> Number of spatial points conserved using tbe = 3: 98 (19.18 %) #> Number of spatial points conserved using tbe = 3: 92 (17.9 %) #> Number of spatial points conserved using tbe = 3: 92 (29.97 %) #> Number of spatial points conserved using tbe = 3: 115 (32.76 %) #> Number of spatial points conserved using tbe = 3: 83 (19.53 %) #> Number of spatial points conserved using tbe = 3: 116 (27.55 %) #> Number of spatial points conserved using tbe = 3: 96 (18.57 %) #> Number of spatial points conserved using tbe = 3: 89 (45.18 %) #> Number of spatial points conserved using tbe = 3: 106 (43.8 %) #> Number of spatial points conserved using tbe = 3: 89 (58.17 %) #> Number of spatial points conserved using tbe = 3: 55 (35.71 %) #> Number of spatial points conserved using tbe = 3: 70 (43.75 %) #> Number of spatial points conserved using tbe = 3: 85 (41.87 %) #> Number of spatial points conserved using tbe = 3: 87 (20.33 %) #> Number of spatial points conserved using tbe = 3: 96 (16.24 %) #> Number of spatial points conserved using tbe = 3: 101 (36.73 %) #> Number of spatial points conserved using tbe = 3: 132 (35.58 %) #> Number of spatial points conserved using tbe = 3: 121 (21.72 %) #> Number of spatial points conserved using tbe = 3: 3 (100 %) #> No convex Hull found for sample: MM012022_05_18_00h25m45s (none distance < quantile)  #> Number of spatial points conserved using tbe = 3: 116 (35.8 %) #> Number of spatial points conserved using tbe = 3: 73 (29.2 %) #> Number of spatial points conserved using tbe = 3: 94 (20.17 %) #> Number of spatial points conserved using tbe = 3: 95 (22.95 %) #> Number of spatial points conserved using tbe = 3: 104 (16.8 %) #> Number of spatial points conserved using tbe = 3: 92 (16.91 %) #> Number of spatial points conserved using tbe = 3: 93 (21.33 %) #> Number of spatial points conserved using tbe = 3: 121 (28.67 %) #> Number of spatial points conserved using tbe = 3: 30 (10.17 %) #> Number of spatial points conserved using tbe = 3: 99 (24.21 %) #> Number of spatial points conserved using tbe = 3: 21 (22.58 %) #> Number of spatial points conserved using tbe = 3: 106 (22.89 %) #> Number of spatial points conserved using tbe = 3: 118 (24.95 %) #> Number of spatial points conserved using tbe = 3: 77 (11.48 %) #> Number of spatial points conserved using tbe = 3: 90 (15.65 %) #> Number of spatial points conserved using tbe = 3: 80 (11.56 %) #> Number of spatial points conserved using tbe = 3: 123 (25.79 %) #> Number of spatial points conserved using tbe = 3: 138 (41.82 %) #> Number of spatial points conserved using tbe = 3: 113 (25.11 %) #> Number of spatial points conserved using tbe = 3: 98 (24.69 %) #> Number of spatial points conserved using tbe = 3: 92 (17.86 %) #> Number of spatial points conserved using tbe = 3: 42 (11.17 %) #> Number of spatial points conserved using tbe = 3: 133 (25.58 %) #> Number of spatial points conserved using tbe = 3: 90 (16.95 %) #> Number of spatial points conserved using tbe = 3: 145 (44.75 %) #> Number of spatial points conserved using tbe = 3: 86 (27.13 %) #> No convex Hull found for sample: MM012022_05_18_02h24m49s (not enough spatial points) #> Number of spatial points conserved using tbe = 3: 105 (21.43 %) #> Number of spatial points conserved using tbe = 3: 113 (19.35 %) #> Number of spatial points conserved using tbe = 3: 6 (100 %) #> Number of spatial points conserved using tbe = 3: 99 (20.5 %) #> Number of spatial points conserved using tbe = 3: 103 (25.18 %) #> Number of spatial points conserved using tbe = 3: 98 (43.75 %) #> Number of spatial points conserved using tbe = 3: 125 (29.9 %) #> Number of spatial points conserved using tbe = 3: 101 (42.98 %) #> Number of spatial points conserved using tbe = 3: 96 (14.48 %) #> Number of spatial points conserved using tbe = 3: 113 (21.77 %) #> Number of spatial points conserved using tbe = 3: 99 (24.63 %) #> Number of spatial points conserved using tbe = 3: 104 (23.11 %) #> Number of spatial points conserved using tbe = 3: 152 (54.09 %) #> Number of spatial points conserved using tbe = 3: 135 (60 %) #> Number of spatial points conserved using tbe = 3: 133 (30.86 %) #> Number of spatial points conserved using tbe = 3: 121 (26.13 %) #> Number of spatial points conserved using tbe = 3: 123 (49.8 %) #> Number of spatial points conserved using tbe = 3: 98 (17.85 %) #> Number of spatial points conserved using tbe = 3: 135 (41.93 %) #> Number of spatial points conserved using tbe = 3: 95 (22.09 %) #> Number of spatial points conserved using tbe = 3: 130 (41.53 %) #> Number of spatial points conserved using tbe = 3: 90 (28.66 %) #> Number of spatial points conserved using tbe = 3: 129 (29.86 %) #> Number of spatial points conserved using tbe = 3: 116 (37.91 %) #> Number of spatial points conserved using tbe = 3: 100 (23.42 %) #> Number of spatial points conserved using tbe = 3: 106 (22.18 %) #> Number of spatial points conserved using tbe = 3: 81 (26.91 %) #> Number of spatial points conserved using tbe = 3: 82 (20.71 %) #> Number of spatial points conserved using tbe = 3: 102 (28.9 %) #> Number of spatial points conserved using tbe = 3: 86 (27.22 %) #> Number of spatial points conserved using tbe = 3: 88 (20.56 %) #> Number of spatial points conserved using tbe = 3: 108 (24.05 %) #> Number of spatial points conserved using tbe = 3: 94 (23.44 %) #> Number of spatial points conserved using tbe = 3: 118 (25.82 %) #> Number of spatial points conserved using tbe = 3: 98 (24.44 %) #> Number of spatial points conserved using tbe = 3: 148 (69.48 %) #> Number of spatial points conserved using tbe = 3: 112 (26.73 %) #> Number of spatial points conserved using tbe = 3: 41 (56.16 %) #> Number of spatial points conserved using tbe = 3: 113 (77.4 %) #> Number of spatial points conserved using tbe = 3: 97 (19.17 %) #> Number of spatial points conserved using tbe = 3: 151 (51.01 %) #> Number of spatial points conserved using tbe = 3: 86 (14.1 %) #> Number of spatial points conserved using tbe = 3: 96 (17.36 %) #> Number of spatial points conserved using tbe = 3: 129 (25.75 %) #> Number of spatial points conserved using tbe = 3: 72 (14.94 %) #> Number of spatial points conserved using tbe = 3: 81 (33.61 %) #> Number of spatial points conserved using tbe = 3: 20 (20.2 %) #> Number of spatial points conserved using tbe = 3: 83 (13.47 %) full_join(ch, MM_data) |>   ggplot(aes(x = Treatment, y = hull_area)) +   geom_boxplot() #> Joining with `by = join_by(File_name)` #> Warning: Removed 9995 rows containing non-finite outside the scale range #> (`stat_boxplot()`).   full_join(ch, MM_data) |>   group_by(File_name) |>   summarise(     hull_center_away_from_odor = sum(center_of_mass_x > 0) > 0,     Treatment = unique(Treatment)   ) |>   ggplot(aes(fill = hull_center_away_from_odor, x = Treatment)) +   geom_bar() #> Joining with `by = join_by(File_name)`"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"Create folder(s) heatmaps extracted zip files optionally organized factor","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"","code":"extract_heatmap(   path_to_folder,   factor = NULL,   output_path = \"Heatmap\",   verbose = TRUE,   force = FALSE,   heatmap_file_name = \"_carte_thermique_\",   ... )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"path_to_folder Path folder factor (character, default NULL) Set column name create subfolder levels modality. left NULL, heatmaps extracted folder. output_path (default =  \"Heatmap\") verbose (Logical, default = TRUE) TRUE, function print additional information. force Force overwriting path output_path heatmap_file_name Name heatmap file zip file. Default \"carte_thermique\" (sorry french). ... params passed import_mitemap()","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"Nothing. Create files folders.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/extract_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create folder(s) with heatmaps extracted from zip files optionally organized by a factor — extract_heatmap","text":"","code":"extract_heatmap(system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),  factor=\"Treatment\") #> Warning: 1390 file(s) described in metadata were not present in the list of csv files #> Warning: 1 file(s) present in the list of csv files were not described in metadata #>  #> The final number of samples for folder is 76032. #> Rows removed when clearing for run with times sup to maximum_time: 0 (0 runs) #> Rows removed when clearing the first secondes: 603 #> Rows removed when clearing bad x range: 2798 (2 runs) #> Rows removed when clearing bad y range: 0 (0 runs) #> Rows removed when clearing bad x values: 1960 #> Rows removed when clearing bad y values: 26 #>  #> Total rows after filtering: 70828 (from 76032) #> Total runs after filtering: 50 (from 53) extract_heatmap(system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),  factor=\"Biomol_sp\", force=TRUE) #> Warning: 1390 file(s) described in metadata were not present in the list of csv files #> Warning: 1 file(s) present in the list of csv files were not described in metadata #>  #> The final number of samples for folder is 76032. #> Rows removed when clearing for run with times sup to maximum_time: 0 (0 runs) #> Rows removed when clearing the first secondes: 603 #> Rows removed when clearing bad x range: 2798 (2 runs) #> Rows removed when clearing bad y range: 0 (0 runs) #> Rows removed when clearing bad x values: 1960 #> Rows removed when clearing bad y values: 26 #>  #> Total rows after filtering: 70828 (from 76032) #> Total runs after filtering: 50 (from 53) extract_heatmap(system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),  clean=FALSE, force=TRUE) #> Warning: 1390 file(s) described in metadata were not present in the list of csv files #> Warning: 1 file(s) present in the list of csv files were not described in metadata #>  #> The final number of samples for folder is 76032. unlink(\"Heatmap\", recursive = TRUE)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter (clean) MiteMap result — filter_mitemap","title":"Filter (clean) MiteMap result — filter_mitemap","text":"function filter MiteMap data according several parameters. removes: first seconds run, runs aberrant range x y values, points aberrant x y values, runs total time superior maximum_time. can also center x y values additioning constant x y values. default center arena located (0,0) diameter 40mm.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter (clean) MiteMap result — filter_mitemap","text":"","code":"filter_mitemap(   MiteMap,   first_seconds_to_delete = 2,   bad_range_value_x = 42,   bad_range_value_y = 42,   max_x_value = 21,   min_x_value = -21,   max_y_value = 21,   min_y_value = -21,   maximum_time = 302,   center_x = 0,   center_y = 0,   verbose = TRUE )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter (clean) MiteMap result — filter_mitemap","text":"MiteMap (required) result import_mitemap ($resulting_data) raw_data first_seconds_to_delete (default: 2) many seconds delete? bad_range_value_x (default: 45) range value x superior expect. param filter values File_name basis. bad_range_value_y (default: 45) range value y superior expect. param filter values File_name basis. max_x_value (default: 21) Maximum value x axis. param filter values time-point (one line) basis. min_x_value (default: -21) Minimum value x axis. param filter values time-point (one line) basis. max_y_value (default: 21) Maximum value y axis. param filter values time-point (one line) basis. min_y_value (default: -21) Minimum value y axis. param filter values time-point (one line) basis. maximum_time (default: 603) final value time (seconds)). param filter values File_name basis. center_x (int, default 0) Center value x additioning center_x mm x.mm. center_y (int, default 0) Center value y additioning center_y mm y.mm. verbose (Logical, default = TRUE) TRUE, function print additional information.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter (clean) MiteMap result — filter_mitemap","text":"filtered tibble","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter (clean) MiteMap result — filter_mitemap","text":"order filtering : Remove runs (filename) total time superior 'maximum_time'. Remove first 'first_seconds_to_delete' seconds run. Remove runs (filename) aberrant range x y values (.e. superior 'bad_range_value_x' 'bad_range_value_y'). Remove points aberrant x y values (.e. x.mm. < 'min_x_value' x.mm. > 'max_x_value', y.mm. < 'min_y value' y.mm. > 'max_y_value'). Center x y values additioning 'center_x' 'center_y' x y values.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter (clean) MiteMap result — filter_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/filter_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter (clean) MiteMap result — filter_mitemap","text":"","code":"mm_csv <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column = \"File (mite ID)\", verbose = FALSE, clean=FALSE ) dim(mm_csv) #> [1] 76032    35  MM_filtered_1 <- filter_mitemap(mm_csv) #> Rows removed when clearing for run with times sup to maximum_time: 0 (0 runs) #> Rows removed when clearing the first secondes: 603 #> Rows removed when clearing bad x range: 2798 (2 runs) #> Rows removed when clearing bad y range: 0 (0 runs) #> Rows removed when clearing bad x values: 1960 #> Rows removed when clearing bad y values: 26 #>  #> Total rows after filtering: 70828 (from 76032) #> Total runs after filtering: 50 (from 53) dim(MM_filtered_1) #> [1] 70828    35  MM_filtered_2 <- filter_mitemap(mm_csv,   bad_range_value_x = 41,    bad_range_value_y = 44,   first_seconds_to_delete =1,    maximum_time = 301.1 ) #> Rows removed when clearing for run with times sup to maximum_time: 12941 (9 runs) #> Rows removed when clearing the first secondes: 359 #> Rows removed when clearing bad x range: 2798 (2 runs) #> Rows removed when clearing bad y range: 0 (0 runs) #> Rows removed when clearing bad x values: 1960 #> Rows removed when clearing bad y values: 26 #>  #> Total rows after filtering: 58177 (from 76032) #> Total runs after filtering: 41 (from 53) dim(MM_filtered_2) #> [1] 58177    35"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the extension of a file — get_file_extension","title":"Get the extension of a file — get_file_extension","text":"Internally used rename_files_with_number() ex. Warning: work '.' name file extension","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the extension of a file — get_file_extension","text":"","code":"get_file_extension(file_path)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the extension of a file — get_file_extension","text":"file_path (required): path file","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the extension of a file — get_file_extension","text":"extension file.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the extension of a file — get_file_extension","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/get_file_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the extension of a file — get_file_extension","text":"","code":"get_file_extension(\"my_file.csv\") #> [1] \"csv\" get_file_extension(\"my.file.csv\") #> Warning: There is more than one '.' inside your file path: my.file.csv #> [1] \"file\" \"csv\"  get_file_extension(\"my_file.csv.zip\") #> Warning: There is more than one '.' inside your file path: my_file.csv.zip #> [1] \"csv\" \"zip\""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Import MiteMapTools data — import_mitemap","title":"Import MiteMapTools data — import_mitemap","text":"function import data zip files generated MiteMap software. unzips zip files folder, read csv files merge metadata provided. also compute metrics speed turning angle. default, also clean data using filter_mitemap() default parameters. See ?filter_mitemap() parameters set clean FALSE want raw data. default center arena located (0,0) diameter 40mm source odor located c(-20 , 0). zip files metadata files parenthesis space name, may want use rename_files_with_number() function using function. file name metadata must match zip file name, import_mitemap() integrate options handle parenthesis space name files metadata.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import MiteMapTools data — import_mitemap","text":"","code":"import_mitemap(   path_to_folder,   path_to_metadata = NULL,   format_metadata = \"csv\",   clean = TRUE,   delete_parenthesis = FALSE,   replace_parenthesis = TRUE,   delete_space = TRUE,   csv_with_correction = FALSE,   remove_csv_folder = TRUE,   dec = \",\",   sep = \";\",   n_lag = 1,   center_x = 0,   center_y = 0,   x_odor = -20,   y_odor = 0,   force = FALSE,   return_with_logs = FALSE,   compute_metrics = TRUE,   file_name_column = \"File_name\",   raw_data_name = \"donnees_brutes\",   radius_CH = 23.175,   verbose = TRUE,   ... )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import MiteMapTools data — import_mitemap","text":"path_to_folder Path folder zip files containing csv one metadata files .xlsx format path_to_metadata Path csv file (xlsx format_metadata=\"xlsx\"). one csv file set path_to_metadata=\"csv\" (\"xlsx\"). Need set using complete path csv file file folder multiple xlsx/csv files folder. format_metadata Either csv xlsx. set NULL, metadata used. clean (logical, default TRUE) clean MiteMap result using filter_mitemap() function? See filter_mitemap() additional parameters. delete_parenthesis (Logical, default FALSE) delete parenthesis number inside name files metadata. Note name csv inside zip  file parenthesis parenthesis name. Thus, recommended set TRUE least one delete_parenthesis replace_parenthesis parameter. replace_parenthesis (Logical, default TRUE) Replace abc_name(1) abc_name_1 name files metadata. delete_space (Logical, default TRUE) Delete_space name files metadata. csv_with_correction (Logical, default FALSE) TRUE present zip files, position files correction (center reduce 0) used. remove_csv_folder (Logical, default TRUE) FALSE, csv_folder kept. May useful debugging. dec decimal csv metadata files. sep separator csv metadata files. n_lag (int, default 1) Number time step compute speed turning angle. n_lag=1 (default), speed turning angle computed two consecutive time step (0.2s). n_lag=2 speed turning angle computed two time step two time step . center_x (int, default 0) Center value x additioning center_x mm x.mm. center_y (int, default 0) Center value y additioning center_y mm y.mm. x_odor (int, default -20) x position odor source. y_odor (int, default 0) y position odor source. force Force overwriting path csv_folder return_with_logs (Logical, default FALSE). TRUE, returning object list 4 elements containing useful information explore unmatching name file_names metadata compute_metrics (Logical, default TRUE). metrics time_immobile, speed turning angles computed time step ? file_name_column Name column corresponding File_name. raw_data_name Name raw data file zip file. Default \"donnees_brutes\" (sorry french name). using code https://github.com/LR69/MiteMap/tree/MiteMap.v6 need change . radius_CH radius circular half arena (mm). Default 23.175 fit area HH shape. verbose (logical, default TRUE). TRUE, print additional information. ... params passed filter_mitemap().","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import MiteMapTools data — import_mitemap","text":"return_with_logs FALSE (default), return object tibble called resulting_data. return_with_logs TRUE, return list 4 elements: resulting_data: (possibly huge) tibble metadata information position x, y time. files_not_in_csv: list files present csv filenames zip files. files_not_in_metada: list files funded metadata. duplicate_file_name_in_metadata: list duplicated file names metadata. default, resulting_data slot structured 4 obligated columns + columns metadata file + computed metrics compute_metrics TRUE. File_name X..t.s. - time second (position recorded every 0.2s) x.mm. - position x (mm) y.mm. - position y (mm) Metadata columns Computed metrics distance - distance two consecutive time step (mm) speed_mm_s - speed two consecutive time step (mm/s)","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import MiteMapTools data — import_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import MiteMapTools data — import_mitemap","text":"","code":"mm_csv <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column = \"File (mite ID)\", verbose = FALSE ) dim(mm_csv) #> [1] 70828    35 mm_csv$File_name |> unique() |> length() #> [1] 50  mm_csv2 <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column = \"File (mite ID)\", verbose = FALSE, return_with_logs = TRUE ) mm_csv2$files_not_in_csv #>    [1] \"MM032020_10_24_22h23m12s\"   \"MM042022_09_17_01h23m57s\"   #>    [3] \"MM052022_09_16_21h23m45s\"   \"MM082021_07_08_14h23m09s\"   #>    [5] \"MM092022_09_17_14h23m27s\"   \"MM032020_10_24_22h22m48s\"   #>    [7] \"MM042022_09_17_01h24m29s\"   \"MM052022_09_16_21h23m07s\"   #>    [9] \"MM082021_07_08_14h35m25s\"   \"MM092022_09_17_14h23m05s\"   #>   [11] \"MM032020_10_24_22h22m57s\"   \"MM042022_09_17_01h22m58s\"   #>   [13] \"MM052022_09_16_21h23m47s\"   \"MM082021_07_08_14h22m49s\"   #>   [15] \"MM092022_09_17_14h23m03s\"   \"MM032020_10_24_22h23m01s\"   #>   [17] \"MM042022_09_17_01h23m20s\"   \"MM052022_09_16_21h24m09s\"   #>   [19] \"MM082021_07_08_14h23m37s\"   \"MM092022_09_17_14h23m48s\"   #>   [21] \"MM032020_10_24_22h23m52s\"   \"MM042022_09_17_01h22m49s\"   #>   [23] \"MM052022_09_16_21h23m24s\"   \"MM082021_07_08_14h24m25s\"   #>   [25] \"MM092022_09_17_14h24m45s\"   \"MM032020_10_24_22h23m33s\"   #>   [27] \"MM042022_09_17_01h23m33s\"   \"MM052022_09_16_21h23m47s_1\" #>   [29] \"MM082021_07_08_14h23m24s\"   \"MM092022_09_17_14h23m04s\"   #>   [31] \"MM032020_10_24_22h23m27s\"   \"MM042022_09_17_01h24m00s\"   #>   [33] \"MM052022_09_16_21h24m43s\"   \"MM082021_07_08_15h23m07s\"   #>   [35] \"MM092022_09_17_15h23m33s\"   \"MM032020_10_24_22h23m03s\"   #>   [37] \"MM042022_09_17_01h23m32s\"   \"MM052022_09_16_21h23m45s_1\" #>   [39] \"MM082021_07_08_15h23m03s\"   \"MM092022_09_17_15h23m27s\"   #>   [41] \"MM032020_10_24_22h24m03s\"   \"MM042022_09_17_01h25m44s\"   #>   [43] \"MM052022_09_16_21h24m00s\"   \"MM082021_07_08_16h23m19s\"   #>   [45] \"MM032020_10_24_22h23m33s_1\" \"MM042022_09_17_01h23m29s\"   #>   [47] \"MM052022_09_16_21h23m40s\"   \"MM082021_07_08_16h22m53s\"   #>   [49] \"MM032020_10_24_23h23m33s\"   \"MM042022_09_17_02h23m15s\"   #>   [51] \"MM052022_09_16_22h23m09s\"   \"MM082021_07_08_16h23m39s\"   #>   [53] \"MM092022_09_17_16h23m21s\"   \"MM032020_10_24_23h23m11s\"   #>   [55] \"MM042022_09_17_02h23m03s\"   \"MM052022_09_16_22h23m03s\"   #>   [57] \"MM082021_07_08_16h23m11s\"   \"MM092022_09_17_16h23m02s\"   #>   [59] \"MM032020_10_24_23h24m29s\"   \"MM042022_09_17_02h24m48s\"   #>   [61] \"MM052022_09_16_22h23m09s_1\" \"MM082021_07_08_16h23m59s\"   #>   [63] \"MM092022_09_17_16h24m21s\"   \"MM032020_10_24_23h23m18s\"   #>   [65] \"MM042022_09_17_02h23m33s\"   \"MM052022_09_16_22h23m43s\"   #>   [67] \"MM082021_07_08_16h25m01s_1\" \"MM092022_09_17_16h24m44s\"   #>   [69] \"MM032020_10_24_23h23m21s\"   \"MM042022_09_17_02h22m54s\"   #>   [71] \"MM052022_09_16_22h23m12s\"   \"MM082021_07_08_16h23m56s\"   #>   [73] \"MM092022_09_17_16h24m11s\"   \"MM032020_10_24_23h36m57s\"   #>   [75] \"MM042022_09_17_02h23m05s\"   \"MM052022_09_16_22h23m03s_1\" #>   [77] \"MM082021_07_08_16h23m15s\"   \"MM092022_09_17_16h22m54s\"   #>   [79] \"MM032020_10_24_23h23m09s\"   \"MM042022_09_17_02h22m51s\"   #>   [81] \"MM052022_09_16_22h22m47s\"   \"MM082021_07_08_16h22m57s\"   #>   [83] \"MM092022_09_17_16h23m13s\"   \"MM032020_10_24_23h22m57s\"   #>   [85] \"MM042022_09_17_02h23m43s\"   \"MM052022_09_16_22h22m57s\"   #>   [87] \"MM082021_07_08_16h23m28s\"   \"MM092022_09_17_16h24m23s\"   #>   [89] \"MM032020_10_24_23h22m55s\"   \"MM042022_09_17_02h23m13s\"   #>   [91] \"MM052022_09_16_22h23m23s\"   \"MM082021_07_08_16h23m03s\"   #>   [93] \"MM092022_09_17_16h22m55s\"   \"MM012022_05_17_10h23m27s_1\" #>   [95] \"MM032020_10_24_23h23m11s_1\" \"MM042022_09_17_02h23m19s\"   #>   [97] \"MM052022_09_16_22h23m45s\"   \"MM082021_07_08_16h23m31s\"   #>   [99] \"MM092022_09_17_16h24m49s\"   \"MM032020_10_24_23h23m34s\"   #>  [101] \"MM042022_09_17_02h23m22s\"   \"MM052022_09_16_22h23m01s\"   #>  [103] \"MM082021_07_08_16h23m13s\"   \"MM092022_09_17_16h23m19s\"   #>  [105] \"MM032020_10_24_23h24m42s\"   \"MM042022_09_17_02h22m59s\"   #>  [107] \"MM052022_09_16_22h23m55s\"   \"MM082021_07_08_16h23m25s\"   #>  [109] \"MM092022_09_17_16h24m12s\"   \"MM042022_09_17_02h23m29s\"   #>  [111] \"MM052022_09_16_22h24m15s\"   \"MM082021_07_08_16h22m55s\"   #>  [113] \"MM092022_09_17_16h23m07s\"   \"MM032020_10_24_23h23m12s\"   #>  [115] \"MM042022_09_17_02h23m15s_1\" \"MM052022_09_16_22h23m10s\"   #>  [117] \"MM082021_07_08_16h22m53s_1\" \"MM032020_10_24_23h23m19s\"   #>  [119] \"MM042022_09_17_02h23m15s_2\" \"MM052022_09_16_22h23m13s\"   #>  [121] \"MM082021_07_08_16h23m25s_1\" \"MM092022_09_17_16h23m45s\"   #>  [123] \"MM032020_10_24_23h23m12s_1\" \"MM042022_09_17_02h23m11s\"   #>  [125] \"MM052022_09_16_22h23m51s\"   \"MM082021_07_08_16h23m22s\"   #>  [127] \"MM092022_09_17_16h23m26s\"   \"MM032020_10_24_23h23m05s\"   #>  [129] \"MM042022_09_17_02h22m57s\"   \"MM052022_09_16_22h23m27s\"   #>  [131] \"MM082021_07_08_16h22m59s\"   \"MM092022_09_17_16h22m50s\"   #>  [133] \"MM032020_10_24_23h23m52s\"   \"MM042022_09_17_02h23m47s\"   #>  [135] \"MM052022_09_16_22h24m19s\"   \"MM082021_07_08_16h23m03s_1\" #>  [137] \"MM092022_09_17_16h23m51s\"   \"MM032020_10_24_23h23m18s_1\" #>  [139] \"MM042022_09_17_02h23m27s\"   \"MM052022_09_16_22h23m39s\"   #>  [141] \"MM082021_07_08_16h22m52s\"   \"MM092022_09_17_16h23m11s_1\" #>  [143] \"MM042022_09_17_02h23m33s_1\" \"MM052022_09_16_22h23m39s_1\" #>  [145] \"MM082021_07_08_16h23m17s\"   \"MM092022_09_17_16h23m38s\"   #>  [147] \"MM042022_09_17_02h22m46s\"   \"MM052022_09_16_22h22m49s\"   #>  [149] \"MM082021_07_08_16h23m11s_1\" \"MM032020_10_24_23h22m50s\"   #>  [151] \"MM042022_09_17_02h23m22s_1\" \"MM052022_09_16_22h23m21s\"   #>  [153] \"MM082021_07_08_16h23m53s\"   \"MM092022_09_17_16h24m03s\"   #>  [155] \"MM032020_10_24_23h23m51s\"   \"MM042022_09_17_02h23m51s\"   #>  [157] \"MM052022_09_16_22h23m28s\"   \"MM082021_07_08_16h23m35s\"   #>  [159] \"MM092022_09_17_16h23m21s_1\" \"MM032020_10_24_23h23m06s\"   #>  [161] \"MM042022_09_17_02h23m15s_3\" \"MM052022_09_16_22h23m19s\"   #>  [163] \"MM082021_07_08_16h23m37s\"   \"MM092022_09_17_16h23m32s\"   #>  [165] \"MM032020_10_24_23h23m32s\"   \"MM042022_09_17_02h23m43s_1\" #>  [167] \"MM052022_09_16_22h23m49s\"   \"MM082021_07_08_16h24m19s\"   #>  [169] \"MM092022_09_17_16h23m56s\"   \"MM032020_10_24_23h23m41s\"   #>  [171] \"MM042022_09_17_02h22m51s_1\" \"MM052022_09_16_22h23m09s_2\" #>  [173] \"MM082021_07_08_16h24m13s\"   \"MM092022_09_17_16h23m55s\"   #>  [175] \"MM012022_05_17_10h24m31s_1\" \"MM032020_10_24_23h23m04s\"   #>  [177] \"MM042022_09_17_02h23m48s\"   \"MM052022_09_16_22h24m16s\"   #>  [179] \"MM082021_07_08_16h22m59s_1\" \"MM092022_09_17_16h22m47s\"   #>  [181] \"MM032020_10_24_23h24m48s\"   \"MM042022_09_17_02h24m51s\"   #>  [183] \"MM052022_09_16_22h25m44s\"   \"MM082021_07_08_16h25m02s\"   #>  [185] \"MM092022_09_17_16h26m18s\"   \"MM032020_10_24_23h22m57s_1\" #>  [187] \"MM042022_09_17_02h23m33s_2\" \"MM052022_09_16_22h23m30s\"   #>  [189] \"MM082021_07_08_16h23m29s\"   \"MM092022_09_17_16h23m59s\"   #>  [191] \"MM032020_10_25_00h23m26s\"   \"MM042022_09_17_03h23m03s\"   #>  [193] \"MM052022_09_16_23h22m47s\"   \"MM082021_07_08_17h23m59s\"   #>  [195] \"MM092022_09_17_17h23m41s\"   \"MM032020_10_25_00h24m02s\"   #>  [197] \"MM042022_09_17_03h23m46s\"   \"MM052022_09_16_23h23m47s\"   #>  [199] \"MM082021_07_08_17h22m51s\"   \"MM032020_10_25_00h24m04s\"   #>  [201] \"MM042022_09_17_03h23m19s\"   \"MM052022_09_16_23h24m05s\"   #>  [203] \"MM082021_07_08_17h23m05s\"   \"MM092022_09_17_17h23m06s\"   #>  [205] \"MM012022_05_17_11h24m01s_1\" \"MM032020_10_25_00h29m16s\"   #>  [207] \"MM042022_09_17_03h24m40s\"   \"MM052022_09_16_23h25m13s\"   #>  [209] \"MM082021_07_08_17h24m51s\"   \"MM092022_09_17_17h25m06s\"   #>  [211] \"MM032020_10_25_00h22m55s\"   \"MM042022_09_17_03h22m53s\"   #>  [213] \"MM052022_09_16_23h23m17s\"   \"MM082021_07_08_17h23m51s\"   #>  [215] \"MM092022_09_17_17h24m25s\"   \"MM032020_10_25_00h24m00s\"   #>  [217] \"MM042022_09_17_03h22m54s\"   \"MM052022_09_16_23h24m48s\"   #>  [219] \"MM082021_07_08_17h23m01s\"   \"MM092022_09_17_17h23m33s\"   #>  [221] \"MM032020_10_25_00h24m16s\"   \"MM042022_09_17_03h24m09s\"   #>  [223] \"MM052022_09_16_23h24m20s\"   \"MM082021_07_08_17h24m18s\"   #>  [225] \"MM092022_09_17_17h24m42s\"   \"MM032020_10_25_00h23m16s\"   #>  [227] \"MM042022_09_17_03h23m16s\"   \"MM052022_09_16_23h24m09s\"   #>  [229] \"MM082021_07_08_17h24m57s\"   \"MM092022_09_17_17h24m34s\"   #>  [231] \"MM082021_07_08_17h23m03s\"   \"MM092022_09_17_17h24m21s\"   #>  [233] \"MM012022_05_17_11h22m49s\"   \"MM082021_07_08_17h22m53s\"   #>  [235] \"MM092022_09_17_17h23m52s\"   \"MM012022_05_17_11h23m33s\"   #>  [237] \"MM032020_10_25_02h23m46s\"   \"MM042022_09_17_05h25m06s\"   #>  [239] \"MM052022_09_17_01h23m55s\"   \"MM082021_07_08_19h24m44s\"   #>  [241] \"MM092022_09_17_19h25m09s\"   \"MM032020_10_25_02h23m33s\"   #>  [243] \"MM042022_09_17_05h23m27s\"   \"MM052022_09_17_01h22m57s\"   #>  [245] \"MM082021_07_08_19h23m34s\"   \"MM092022_09_17_19h23m58s\"   #>  [247] \"MM042022_09_17_05h24m25s\"   \"MM052022_09_17_01h24m23s\"   #>  [249] \"MM082021_07_08_19h24m33s\"   \"MM032020_10_25_02h23m11s\"   #>  [251] \"MM042022_09_17_05h23m13s\"   \"MM052022_09_17_01h23m25s\"   #>  [253] \"MM082021_07_08_19h23m13s\"   \"MM092022_09_17_19h23m10s\"   #>  [255] \"MM032020_10_25_02h23m32s\"   \"MM042022_09_17_05h23m41s\"   #>  [257] \"MM052022_09_17_01h24m09s\"   \"MM082021_07_08_19h23m23s\"   #>  [259] \"MM092022_09_17_19h23m54s\"   \"MM032020_10_25_02h23m03s\"   #>  [261] \"MM042022_09_17_05h23m08s\"   \"MM052022_09_17_01h23m27s\"   #>  [263] \"MM092022_09_17_19h23m47s\"   \"MM032020_10_25_02h25m06s\"   #>  [265] \"MM042022_09_17_05h23m55s\"   \"MM052022_09_17_01h24m17s\"   #>  [267] \"MM092022_09_17_19h24m15s\"   \"MM012022_05_17_13h24m33s\"   #>  [269] \"MM032020_10_25_02h23m03s_1\" \"MM042022_09_17_05h23m33s\"   #>  [271] \"MM052022_09_17_01h23m13s\"   \"MM082021_07_08_19h23m33s\"   #>  [273] \"MM092022_09_17_19h23m18s\"   \"MM032020_10_25_02h22m59s\"   #>  [275] \"MM042022_09_17_05h23m38s\"   \"MM052022_09_17_01h23m51s\"   #>  [277] \"MM082021_07_08_19h23m59s\"   \"MM092022_09_17_19h24m01s\"   #>  [279] \"MM032020_10_25_02h23m52s\"   \"MM042022_09_17_05h23m50s\"   #>  [281] \"MM052022_09_17_01h24m16s\"   \"MM082021_07_08_19h23m55s\"   #>  [283] \"MM092022_09_17_19h23m36s\"   \"MM032020_10_25_02h23m19s\"   #>  [285] \"MM042022_09_17_05h22m57s\"   \"MM052022_09_17_01h23m25s_1\" #>  [287] \"MM082021_07_08_19h23m29s\"   \"MM092022_09_17_19h23m37s\"   #>  [289] \"MM032020_10_25_02h23m30s\"   \"MM042022_09_17_05h23m13s_1\" #>  [291] \"MM052022_09_17_01h23m43s\"   \"MM082021_07_08_19h23m35s\"   #>  [293] \"MM092022_09_17_19h23m53s\"   \"MM032020_10_25_02h23m11s_1\" #>  [295] \"MM042022_09_17_05h23m03s\"   \"MM052022_09_17_01h23m19s\"   #>  [297] \"MM082021_07_08_19h23m36s\"   \"MM092022_09_17_19h23m45s\"   #>  [299] \"MM032020_10_25_02h23m46s_1\" \"MM042022_09_17_05h23m41s_1\" #>  [301] \"MM052022_09_17_01h24m05s\"   \"MM082021_07_08_19h23m43s\"   #>  [303] \"MM092022_09_17_19h23m53s_1\" \"MM032020_10_25_02h24m02s\"   #>  [305] \"MM042022_09_17_05h23m57s\"   \"MM052022_09_17_01h24m03s\"   #>  [307] \"MM082021_07_08_19h24m30s\"   \"MM092022_09_17_19h25m56s\"   #>  [309] \"MM012022_05_17_13h24m09s_1\" \"MM032020_10_25_02h22m56s\"   #>  [311] \"MM042022_09_17_05h23m32s\"   \"MM052022_09_17_01h25m07s\"   #>  [313] \"MM082021_07_08_19h23m25s\"   \"MM092022_09_17_19h23m19s\"   #>  [315] \"MM032020_10_25_02h23m45s\"   \"MM042022_09_17_05h23m21s\"   #>  [317] \"MM052022_09_17_01h23m59s\"   \"MM082021_07_08_19h23m19s\"   #>  [319] \"MM092022_09_17_19h23m29s\"   \"MM012022_05_17_13h23m19s_1\" #>  [321] \"MM032020_10_25_03h24m52s\"   \"MM042022_09_17_07h23m39s\"   #>  [323] \"MM052022_09_17_03h24m13s\"   \"MM082021_07_08_21h24m09s\"   #>  [325] \"MM092022_09_17_21h24m18s\"   \"MM012022_05_17_15h23m55s\"   #>  [327] \"MM032020_10_25_03h23m58s\"   \"MM042022_09_17_07h23m25s\"   #>  [329] \"MM082021_07_08_21h23m51s\"   \"MM092022_09_17_21h23m35s\"   #>  [331] \"MM012022_05_17_15h23m33s\"   \"MM032020_10_25_03h22m58s\"   #>  [333] \"MM042022_09_17_07h23m59s\"   \"MM052022_09_17_03h23m47s\"   #>  [335] \"MM082021_07_08_21h23m21s\"   \"MM092022_09_17_21h23m11s\"   #>  [337] \"MM012022_05_17_15h23m58s\"   \"MM032020_10_25_03h24m10s\"   #>  [339] \"MM042022_09_17_07h24m45s\"   \"MM052022_09_17_03h24m01s\"   #>  [341] \"MM082021_07_08_21h24m15s\"   \"MM012022_05_17_15h24m39s\"   #>  [343] \"MM032020_10_25_03h23m56s\"   \"MM042022_09_17_07h23m35s\"   #>  [345] \"MM052022_09_17_03h23m37s\"   \"MM082021_07_08_21h23m33s\"   #>  [347] \"MM092022_09_17_21h23m36s\"   \"MM012022_05_17_15h23m11s\"   #>  [349] \"MM032020_10_25_20h24m00s\"   \"MM042022_09_18_00h23m49s\"   #>  [351] \"MM052022_09_17_20h24m13s\"   \"MM082021_07_08_21h23m59s\"   #>  [353] \"MM092022_09_17_21h24m17s\"   \"MM012022_05_17_15h23m49s\"   #>  [355] \"MM032020_10_25_20h23m23s\"   \"MM042022_09_18_00h23m33s\"   #>  [357] \"MM052022_09_17_20h24m07s\"   \"MM082021_07_08_21h23m42s\"   #>  [359] \"MM092022_09_17_21h24m03s\"   \"MM012022_05_17_15h23m37s\"   #>  [361] \"MM032020_10_25_20h24m16s\"   \"MM042022_09_18_00h23m35s\"   #>  [363] \"MM052022_09_17_20h25m01s\"   \"MM082021_07_08_21h24m43s\"   #>  [365] \"MM092022_09_17_21h25m58s\"   \"MM012022_05_17_15h24m28s\"   #>  [367] \"MM032020_10_25_20h24m04s\"   \"MM042022_09_18_00h24m10s\"   #>  [369] \"MM052022_09_17_20h24m35s\"   \"MM082021_07_08_21h23m55s\"   #>  [371] \"MM012022_05_17_15h23m37s_1\" \"MM012022_05_17_15h24m21s\"   #>  [373] \"MM032020_10_25_20h23m55s\"   \"MM042022_09_18_00h23m47s\"   #>  [375] \"MM052022_09_17_20h23m09s\"   \"MM082021_07_08_21h23m53s\"   #>  [377] \"MM092022_09_17_21h24m00s\"   \"MM012022_05_17_15h22m50s\"   #>  [379] \"MM032020_10_25_20h24m22s\"   \"MM042022_09_18_00h24m19s\"   #>  [381] \"MM052022_09_17_20h23m31s\"   \"MM082021_07_08_21h24m29s\"   #>  [383] \"MM092022_09_17_21h24m33s\"   \"MM012022_05_17_15h22m47s\"   #>  [385] \"MM032020_10_25_20h24m14s\"   \"MM042022_09_18_00h24m15s\"   #>  [387] \"MM052022_09_17_20h24m52s\"   \"MM082021_07_08_21h24m08s\"   #>  [389] \"MM092022_09_17_21h24m34s\"   \"MM012022_05_17_15h23m53s\"   #>  [391] \"MM032020_10_25_20h23m36s\"   \"MM042022_09_18_00h23m09s\"   #>  [393] \"MM052022_09_17_20h23m45s\"   \"MM082021_07_08_21h23m21s_1\" #>  [395] \"MM092022_09_17_21h23m34s\"   \"MM012022_05_17_15h23m35s\"   #>  [397] \"MM032020_10_25_20h23m20s\"   \"MM042022_09_18_00h23m53s\"   #>  [399] \"MM052022_09_17_20h24m21s\"   \"MM082021_07_08_21h23m17s\"   #>  [401] \"MM092022_09_17_21h23m26s\"   \"MM012022_05_17_15h23m23s\"   #>  [403] \"MM032020_10_25_20h24m33s\"   \"MM042022_09_18_00h24m07s\"   #>  [405] \"MM052022_09_17_20h24m45s\"   \"MM082021_07_08_21h23m53s_1\" #>  [407] \"MM092022_09_17_21h24m06s\"   \"MM012022_05_17_15h23m45s\"   #>  [409] \"MM032020_10_25_20h23m20s_1\" \"MM042022_09_18_00h23m19s\"   #>  [411] \"MM052022_09_17_20h23m15s\"   \"MM082021_07_08_21h23m19s\"   #>  [413] \"MM092022_09_17_21h24m07s\"   \"MM012022_05_17_15h23m44s\"   #>  [415] \"MM032020_10_25_20h23m16s\"   \"MM042022_09_18_00h23m11s\"   #>  [417] \"MM052022_09_17_20h23m51s\"   \"MM082021_07_08_21h23m22s\"   #>  [419] \"MM092022_09_17_21h23m35s_1\" \"MM012022_05_17_15h24m25s\"   #>  [421] \"MM032020_10_25_20h24m38s\"   \"MM042022_09_18_00h26m34s\"   #>  [423] \"MM052022_09_17_20h24m51s\"   \"MM082021_07_08_21h25m22s\"   #>  [425] \"MM092022_09_17_21h25m10s\"   \"MM012022_05_17_15h25m00s\"   #>  [427] \"MM032020_10_25_20h23m56s\"   \"MM042022_09_18_00h25m20s\"   #>  [429] \"MM052022_09_17_20h28m51s\"   \"MM082021_07_08_21h23m56s\"   #>  [431] \"MM092022_09_17_21h23m55s\"   \"MM012022_05_17_15h24m33s\"   #>  [433] \"MM032020_10_25_20h24m10s\"   \"MM042022_09_18_00h23m42s\"   #>  [435] \"MM052022_09_17_20h23m47s\"   \"MM082021_07_08_21h23m54s\"   #>  [437] \"MM092022_09_17_21h24m07s_1\" \"MM012022_05_17_15h23m53s_1\" #>  [439] \"MM032020_10_25_20h24m06s\"   \"MM042022_09_18_00h23m51s\"   #>  [441] \"MM052022_09_17_20h23m47s_1\" \"MM082021_07_08_21h24m53s\"   #>  [443] \"MM092022_09_17_21h23m24s\"   \"MM012022_05_17_15h24m27s\"   #>  [445] \"MM032020_10_25_20h23m39s\"   \"MM042022_09_18_00h23m35s_1\" #>  [447] \"MM052022_09_17_20h22m43s\"   \"MM082021_07_08_21h24m07s\"   #>  [449] \"MM092022_09_17_21h23m51s\"   \"MM012022_05_17_15h23m51s\"   #>  [451] \"MM032020_10_25_20h22m56s\"   \"MM042022_09_18_00h22m53s\"   #>  [453] \"MM052022_09_17_20h23m09s_1\" \"MM092022_09_17_21h23m09s\"   #>  [455] \"MM012022_05_17_15h23m09s\"   \"MM032020_10_25_20h24m01s\"   #>  [457] \"MM042022_09_18_00h24m18s\"   \"MM052022_09_17_20h23m21s\"   #>  [459] \"MM082021_07_08_21h24m21s\"   \"MM092022_09_17_21h24m15s\"   #>  [461] \"MM012022_05_17_15h24m29s\"   \"MM032020_10_25_20h23m05s\"   #>  [463] \"MM042022_09_18_00h23m02s\"   \"MM052022_09_17_20h23m31s_1\" #>  [465] \"MM082021_07_08_21h23m35s\"   \"MM092022_09_17_21h23m19s\"   #>  [467] \"MM012022_05_17_15h23m27s\"   \"MM032020_10_25_20h25m14s\"   #>  [469] \"MM042022_09_18_00h25m15s\"   \"MM052022_09_17_20h25m53s\"   #>  [471] \"MM082021_07_08_21h25m15s\"   \"MM092022_09_17_21h25m43s\"   #>  [473] \"MM012022_05_17_15h25m59s\"   \"MM032020_10_25_20h23m34s\"   #>  [475] \"MM042022_09_18_00h23m12s\"   \"MM052022_09_17_20h23m49s\"   #>  [477] \"MM082021_07_08_21h24m51s\"   \"MM092022_09_17_21h23m59s\"   #>  [479] \"MM012022_05_17_15h23m39s\"   \"MM032020_10_25_20h25m01s\"   #>  [481] \"MM042022_09_18_00h25m10s\"   \"MM052022_09_17_20h35m00s\"   #>  [483] \"MM082021_07_08_21h34m58s\"   \"MM092022_09_17_21h25m26s\"   #>  [485] \"MM012022_05_17_15h33m59s\"   \"MM032020_10_25_20h27m12s\"   #>  [487] \"MM042022_09_18_00h28m24s\"   \"MM052022_09_17_20h27m35s\"   #>  [489] \"MM082021_07_08_21h29m27s\"   \"MM092022_09_17_21h29m28s\"   #>  [491] \"MM012022_05_17_15h29m25s\"   \"MM032020_10_25_20h23m03s\"   #>  [493] \"MM042022_09_18_00h23m43s\"   \"MM052022_09_17_20h24m01s\"   #>  [495] \"MM082021_07_08_21h23m35s_1\" \"MM092022_09_17_21h24m00s_1\" #>  [497] \"MM032020_10_25_20h23m59s\"   \"MM042022_09_18_00h23m57s\"   #>  [499] \"MM052022_09_17_20h24m33s\"   \"MM082021_07_08_21h24m18s\"   #>  [501] \"MM092022_09_17_21h24m36s\"   \"MM012022_05_17_15h24m29s_1\" #>  [503] \"MM032020_10_25_20h23m24s\"   \"MM042022_09_18_00h23m20s\"   #>  [505] \"MM052022_09_17_20h23m35s\"   \"MM082021_07_08_21h23m25s\"   #>  [507] \"MM092022_09_17_21h23m52s\"   \"MM012022_05_17_15h23m41s\"   #>  [509] \"MM032020_10_25_20h23m19s\"   \"MM042022_09_18_00h22m55s\"   #>  [511] \"MM052022_09_17_20h23m49s_1\" \"MM082021_07_08_21h22m59s\"   #>  [513] \"MM092022_09_17_21h23m36s_1\" \"MM012022_05_17_15h23m45s_1\" #>  [515] \"MM032020_10_25_23h22m59s\"   \"MM042022_09_18_03h23m43s\"   #>  [517] \"MM052022_09_17_23h23m38s\"   \"MM082021_07_09_00h22m59s\"   #>  [519] \"MM092022_09_18_00h23m09s\"   \"MM012022_05_17_18h23m43s\"   #>  [521] \"MM032020_10_25_23h24m28s\"   \"MM042022_09_18_03h22m56s\"   #>  [523] \"MM052022_09_17_23h23m19s\"   \"MM082021_07_09_00h23m03s\"   #>  [525] \"MM092022_09_18_00h23m39s\"   \"MM012022_05_17_18h23m39s\"   #>  [527] \"MM032020_10_25_23h23m17s\"   \"MM042022_09_18_03h23m07s\"   #>  [529] \"MM052022_09_17_23h23m49s\"   \"MM082021_07_09_00h23m19s\"   #>  [531] \"MM092022_09_18_00h24m23s\"   \"MM012022_05_17_18h24m19s\"   #>  [533] \"MM032020_10_25_23h22m58s\"   \"MM042022_09_18_03h23m52s\"   #>  [535] \"MM052022_09_17_23h23m31s\"   \"MM082021_07_09_00h23m03s_1\" #>  [537] \"MM012022_05_17_18h23m35s\"   \"MM032020_10_25_23h23m42s\"   #>  [539] \"MM042022_09_18_03h23m07s_1\" \"MM052022_09_17_23h23m47s\"   #>  [541] \"MM082021_07_09_00h22m53s\"   \"MM092022_09_18_00h23m06s\"   #>  [543] \"MM012022_05_17_18h23m21s\"   \"MM032020_10_25_23h24m28s_1\" #>  [545] \"MM042022_09_18_03h24m33s\"   \"MM052022_09_17_23h24m48s\"   #>  [547] \"MM082021_07_09_00h25m31s\"   \"MM092022_09_18_00h24m51s\"   #>  [549] \"MM012022_05_17_18h25m09s\"   \"MM032020_10_25_23h23m04s\"   #>  [551] \"MM042022_09_18_03h23m07s_2\" \"MM052022_09_17_23h23m48s\"   #>  [553] \"MM082021_07_09_00h23m01s\"   \"MM092022_09_18_00h23m35s\"   #>  [555] \"MM012022_05_17_18h23m37s\"   \"MM032020_10_25_23h23m01s\"   #>  [557] \"MM042022_09_18_03h22m59s\"   \"MM052022_09_17_23h23m47s_1\" #>  [559] \"MM082021_07_09_00h23m35s\"   \"MM092022_09_18_00h23m36s\"   #>  [561] \"MM012022_05_17_18h23m13s\"   \"MM032020_10_25_23h55m30s\"   #>  [563] \"MM042022_09_18_03h55m25s\"   \"MM052022_09_17_23h55m31s\"   #>  [565] \"MM082021_07_09_00h23m41s\"   \"MM092022_09_18_00h23m46s\"   #>  [567] \"MM012022_05_17_18h24m11s\"   \"MM032020_10_25_23h23m18s\"   #>  [569] \"MM042022_09_18_03h23m27s\"   \"MM052022_09_17_23h23m52s\"   #>  [571] \"MM092022_09_18_00h23m37s\"   \"MM012022_05_17_18h23m21s_1\" #>  [573] \"MM042022_09_18_03h23m23s\"   \"MM052022_09_17_23h23m17s\"   #>  [575] \"MM082021_07_09_00h23m41s_1\" \"MM092022_09_18_00h23m39s_1\" #>  [577] \"MM012022_05_17_18h23m19s\"   \"MM032020_10_26_01h25m02s\"   #>  [579] \"MM042022_09_18_05h25m13s\"   \"MM082021_07_09_02h24m41s\"   #>  [581] \"MM092022_09_18_02h25m36s\"   \"MM012022_05_17_20h25m29s\"   #>  [583] \"MM032020_10_26_01h23m01s\"   \"MM042022_09_18_05h23m00s\"   #>  [585] \"MM052022_09_18_01h23m21s\"   \"MM082021_07_09_02h22m57s\"   #>  [587] \"MM092022_09_18_02h23m27s\"   \"MM012022_05_17_20h22m45s\"   #>  [589] \"MM032020_10_26_01h23m16s\"   \"MM042022_09_18_05h24m17s\"   #>  [591] \"MM052022_09_18_01h23m57s\"   \"MM082021_07_09_02h23m13s\"   #>  [593] \"MM092022_09_18_02h23m47s\"   \"MM012022_05_17_20h24m01s\"   #>  [595] \"MM032020_10_26_01h23m27s\"   \"MM042022_09_18_05h23m21s\"   #>  [597] \"MM052022_09_18_01h23m55s\"   \"MM082021_07_09_02h23m25s\"   #>  [599] \"MM092022_09_18_02h23m33s\"   \"MM012022_05_17_20h23m12s\"   #>  [601] \"MM032020_10_26_01h23m12s\"   \"MM042022_09_18_05h23m07s\"   #>  [603] \"MM052022_09_18_01h23m18s\"   \"MM082021_07_09_02h23m10s\"   #>  [605] \"MM092022_09_18_02h23m39s\"   \"MM012022_05_17_20h23m21s\"   #>  [607] \"MM032020_10_26_01h23m39s\"   \"MM042022_09_18_05h24m00s\"   #>  [609] \"MM052022_09_18_01h26m52s\"   \"MM082021_07_09_02h23m23s\"   #>  [611] \"MM092022_09_18_02h23m39s_1\" \"MM012022_05_17_20h23m55s\"   #>  [613] \"MM032020_10_26_01h24m55s\"   \"MM042022_09_18_05h24m51s\"   #>  [615] \"MM052022_09_18_01h25m23s\"   \"MM082021_07_09_02h24m27s\"   #>  [617] \"MM092022_09_18_02h24m59s\"   \"MM012022_05_17_20h25m35s\"   #>  [619] \"MM032020_10_26_01h23m46s\"   \"MM042022_09_18_05h24m06s\"   #>  [621] \"MM052022_09_18_01h24m19s\"   \"MM082021_07_09_02h24m06s\"   #>  [623] \"MM092022_09_18_02h24m22s\"   \"MM012022_05_17_20h24m23s\"   #>  [625] \"MM032020_10_26_01h24m19s\"   \"MM042022_09_18_05h23m55s\"   #>  [627] \"MM052022_09_18_01h24m22s\"   \"MM082021_07_09_02h23m54s\"   #>  [629] \"MM092022_09_18_02h24m13s\"   \"MM012022_05_17_20h24m07s\"   #>  [631] \"MM032020_10_26_01h23m25s\"   \"MM042022_09_18_05h23m01s\"   #>  [633] \"MM052022_09_18_01h23m31s\"   \"MM082021_07_09_02h23m45s\"   #>  [635] \"MM092022_09_18_02h23m17s\"   \"MM012022_05_17_20h23m33s\"   #>  [637] \"MM032020_10_26_01h23m09s\"   \"MM042022_09_18_05h22m58s\"   #>  [639] \"MM052022_09_18_01h23m49s\"   \"MM082021_07_09_02h23m17s\"   #>  [641] \"MM092022_09_18_02h23m26s\"   \"MM012022_05_17_20h23m46s\"   #>  [643] \"MM032020_10_26_01h24m55s_1\" \"MM042022_09_18_05h24m58s\"   #>  [645] \"MM052022_09_18_01h25m36s\"   \"MM082021_07_09_02h25m01s\"   #>  [647] \"MM092022_09_18_02h25m12s\"   \"MM012022_05_17_20h25m35s_1\" #>  [649] \"MM032020_10_26_01h25m05s\"   \"MM042022_09_18_05h27m13s\"   #>  [651] \"MM052022_09_18_01h24m51s\"   \"MM082021_07_09_02h25m20s\"   #>  [653] \"MM092022_09_18_02h24m52s\"   \"MM012022_05_17_20h27m19s\"   #>  [655] \"MM032020_10_26_01h24m49s\"   \"MM042022_09_18_05h24m52s\"   #>  [657] \"MM052022_09_18_01h25m05s\"   \"MM082021_07_09_02h25m42s\"   #>  [659] \"MM092022_09_18_02h25m08s\"   \"MM012022_05_17_20h27m50s\"   #>  [661] \"MM032020_10_26_01h22m56s\"   \"MM042022_09_18_05h24m55s\"   #>  [663] \"MM052022_09_18_01h23m56s\"   \"MM082021_07_09_02h23m03s\"   #>  [665] \"MM092022_09_18_02h23m51s\"   \"MM012022_05_17_20h23m11s\"   #>  [667] \"MM032020_10_26_01h30m07s\"   \"MM042022_09_18_05h24m56s\"   #>  [669] \"MM052022_09_18_01h23m29s\"   \"MM082021_07_09_02h23m17s_1\" #>  [671] \"MM092022_09_18_02h23m16s\"   \"MM012022_05_17_20h23m33s_1\" #>  [673] \"MM032020_10_26_01h22m59s\"   \"MM042022_09_18_05h22m43s\"   #>  [675] \"MM052022_09_18_01h23m22s\"   \"MM082021_07_09_02h23m09s\"   #>  [677] \"MM092022_09_18_02h23m04s\"   \"MM012022_05_17_20h22m53s\"   #>  [679] \"MM032020_10_26_01h23m05s\"   \"MM042022_09_18_05h23m20s\"   #>  [681] \"MM052022_09_18_01h23m13s\"   \"MM082021_07_09_02h23m13s_1\" #>  [683] \"MM092022_09_18_02h23m09s\"   \"MM012022_05_17_20h23m43s\"   #>  [685] \"MM032020_10_26_01h23m19s\"   \"MM042022_09_18_05h22m51s\"   #>  [687] \"MM052022_09_18_01h23m17s\"   \"MM082021_07_09_02h23m13s_2\" #>  [689] \"MM092022_09_18_02h23m33s_2\" \"MM012022_05_17_20h23m13s\"   #>  [691] \"MM032020_10_26_01h22m59s_1\" \"MM042022_09_18_05h23m31s\"   #>  [693] \"MM082021_07_09_02h23m29s\"   \"MM092022_09_18_02h23m09s_1\" #>  [695] \"MM012022_05_17_20h23m47s\"   \"MM032020_10_26_01h23m25s_1\" #>  [697] \"MM042022_09_18_05h24m57s\"   \"MM052022_09_18_01h24m39s\"   #>  [699] \"MM082021_07_09_02h24m01s\"   \"MM092022_09_18_02h25m34s\"   #>  [701] \"MM012022_05_17_20h24m57s\"   \"MM032020_10_26_01h23m14s\"   #>  [703] \"MM042022_09_18_05h24m19s\"   \"MM052022_09_18_01h24m13s\"   #>  [705] \"MM082021_07_09_02h23m53s\"   \"MM092022_09_18_02h24m42s\"   #>  [707] \"MM012022_05_17_20h24m35s\"   \"MM032020_10_26_01h23m20s\"   #>  [709] \"MM042022_09_18_05h23m35s\"   \"MM052022_09_18_01h23m54s\"   #>  [711] \"MM082021_07_09_02h23m17s_2\" \"MM092022_09_18_02h23m53s\"   #>  [713] \"MM042022_09_18_05h24m06s_1\" \"MM052022_09_18_01h23m41s\"   #>  [715] \"MM082021_07_09_02h23m39s\"   \"MM012022_05_17_20h24m36s\"   #>  [717] \"MM032020_10_26_01h24m24s\"   \"MM042022_09_18_05h24m43s\"   #>  [719] \"MM052022_09_18_01h23m17s_1\" \"MM082021_07_09_02h24m17s\"   #>  [721] \"MM092022_09_18_02h24m28s\"   \"MM012022_05_17_20h24m50s\"   #>  [723] \"MM032020_10_26_01h23m44s\"   \"MM042022_09_18_05h23m30s\"   #>  [725] \"MM052022_09_18_01h23m16s\"   \"MM082021_07_09_02h23m05s\"   #>  [727] \"MM092022_09_18_02h23m01s\"   \"MM012022_05_17_20h23m07s\"   #>  [729] \"MM032020_10_26_01h23m58s\"   \"MM042022_09_18_05h24m05s\"   #>  [731] \"MM052022_09_18_01h24m31s\"   \"MM082021_07_09_02h24m05s\"   #>  [733] \"MM092022_09_18_02h24m45s\"   \"MM012022_05_17_20h24m51s\"   #>  [735] \"MM032020_10_26_01h22m54s\"   \"MM042022_09_18_05h23m57s\"   #>  [737] \"MM052022_09_18_01h24m48s\"   \"MM082021_07_09_02h23m55s\"   #>  [739] \"MM012022_05_17_20h24m08s\"   \"MM032020_10_26_01h23m38s\"   #>  [741] \"MM042022_09_18_05h23m15s\"   \"MM052022_09_18_01h24m03s\"   #>  [743] \"MM082021_07_09_02h23m51s\"   \"MM092022_09_18_02h24m26s\"   #>  [745] \"MM012022_05_17_20h23m57s\"   \"MM032020_10_26_01h23m19s_1\" #>  [747] \"MM042022_09_18_05h23m09s\"   \"MM082021_07_09_02h23m35s\"   #>  [749] \"MM092022_09_18_02h23m33s_3\" \"MM012022_05_17_20h24m01s_1\" #>  [751] \"MM032020_10_26_01h23m24s\"   \"MM042022_09_18_05h23m04s\"   #>  [753] \"MM052022_09_18_01h23m53s\"   \"MM082021_07_09_02h23m02s\"   #>  [755] \"MM092022_09_18_02h23m03s\"   \"MM012022_05_17_20h23m50s\"   #>  [757] \"MM032020_10_26_01h24m25s\"   \"MM042022_09_18_05h24m01s\"   #>  [759] \"MM052022_09_18_01h24m55s_1\" \"MM082021_07_09_02h24m13s\"   #>  [761] \"MM092022_09_18_02h24m13s_1\" \"MM012022_05_17_20h25m07s\"   #>  [763] \"MM032020_10_26_01h23m18s\"   \"MM042022_09_18_05h23m03s\"   #>  [765] \"MM052022_09_18_01h23m51s\"   \"MM082021_07_09_02h22m55s\"   #>  [767] \"MM092022_09_18_02h23m57s\"   \"MM012022_05_17_20h23m59s\"   #>  [769] \"MM032020_10_26_01h24m32s\"   \"MM042022_09_18_05h23m57s_1\" #>  [771] \"MM052022_09_18_01h24m45s\"   \"MM082021_07_09_02h22m51s\"   #>  [773] \"MM092022_09_18_02h24m10s\"   \"MM012022_05_17_20h24m59s\"   #>  [775] \"MM032020_10_26_01h23m39s_1\" \"MM042022_09_18_05h23m19s\"   #>  [777] \"MM052022_09_18_01h24m18s\"   \"MM082021_07_09_02h23m25s_1\" #>  [779] \"MM092022_09_18_02h24m24s\"   \"MM012022_05_17_20h23m27s\"   #>  [781] \"MM032020_10_26_01h23m33s\"   \"MM042022_09_18_05h23m43s\"   #>  [783] \"MM052022_09_18_01h24m29s\"   \"MM082021_07_09_02h23m19s\"   #>  [785] \"MM092022_09_18_02h23m46s\"   \"MM012022_05_17_20h24m45s\"   #>  [787] \"MM032020_10_26_01h23m52s\"   \"MM042022_09_18_05h23m03s_1\" #>  [789] \"MM082021_07_09_02h23m27s\"   \"MM012022_05_17_20h23m19s\"   #>  [791] \"MM042022_09_18_05h23m32s\"   \"MM052022_09_18_01h30m31s\"   #>  [793] \"MM082021_07_09_02h25m33s\"   \"MM092022_09_18_02h26m09s\"   #>  [795] \"MM012022_05_17_20h25m45s\"   \"MM032020_10_26_01h24m50s\"   #>  [797] \"MM042022_09_18_05h23m51s\"   \"MM052022_09_18_01h24m11s\"   #>  [799] \"MM082021_07_09_02h23m23s_1\" \"MM092022_09_18_02h24m22s_1\" #>  [801] \"MM012022_05_17_20h24m28s\"   \"MM032020_10_26_01h25m33s\"   #>  [803] \"MM042022_09_18_05h23m33s\"   \"MM052022_09_18_01h25m57s\"   #>  [805] \"MM082021_07_09_02h23m45s_1\" \"MM092022_09_18_02h24m27s\"   #>  [807] \"MM012022_05_17_20h24m39s\"   \"MM032020_10_26_01h28m49s\"   #>  [809] \"MM042022_09_18_05h25m16s\"   \"MM052022_09_18_01h23m56s_1\" #>  [811] \"MM082021_07_09_02h24m58s\"   \"MM092022_09_18_02h25m19s\"   #>  [813] \"MM012022_05_17_20h25m39s\"   \"MM032020_10_26_01h25m32s\"   #>  [815] \"MM042022_09_18_05h23m25s\"   \"MM052022_09_18_01h24m37s\"   #>  [817] \"MM082021_07_09_02h23m21s\"   \"MM092022_09_18_02h23m10s\"   #>  [819] \"MM012022_05_17_20h23m45s\"   \"MM032020_10_26_01h23m13s\"   #>  [821] \"MM042022_09_18_05h23m07s_1\" \"MM052022_09_18_01h23m50s\"   #>  [823] \"MM092022_09_18_02h23m24s\"   \"MM012022_05_17_20h23m39s\"   #>  [825] \"MM032020_10_26_01h24m38s\"   \"MM042022_09_18_05h24m50s\"   #>  [827] \"MM052022_09_18_01h24m23s\"   \"MM082021_07_09_02h24m27s_1\" #>  [829] \"MM012022_05_17_20h24m05s\"   \"MM032020_10_26_01h24m07s\"   #>  [831] \"MM042022_09_18_05h24m16s\"   \"MM052022_09_18_01h24m53s\"   #>  [833] \"MM092022_09_18_02h24m09s\"   \"MM012022_05_17_20h24m39s_1\" #>  [835] \"MM032020_10_26_01h25m22s\"   \"MM042022_09_18_05h23m24s\"   #>  [837] \"MM082021_07_09_02h26m53s\"   \"MM092022_09_18_02h23m21s\"   #>  [839] \"MM012022_05_17_20h24m37s\"   \"MM032020_10_26_03h24m18s\"   #>  [841] \"MM042022_09_18_07h24m30s\"   \"MM052022_09_18_03h24m32s\"   #>  [843] \"MM082021_07_09_04h23m55s\"   \"MM092022_09_18_04h23m17s\"   #>  [845] \"MM012022_05_17_22h24m17s\"   \"MM032020_10_26_03h23m49s\"   #>  [847] \"MM042022_09_18_07h24m06s\"   \"MM052022_09_18_03h24m59s\"   #>  [849] \"MM082021_07_09_04h23m57s\"   \"MM092022_09_18_04h23m33s\"   #>  [851] \"MM012022_05_17_22h23m39s\"   \"MM042022_09_18_07h24m23s\"   #>  [853] \"MM052022_09_18_03h24m01s\"   \"MM082021_07_09_04h23m19s\"   #>  [855] \"MM092022_09_18_04h23m15s\"   \"MM012022_05_17_22h23m49s\"   #>  [857] \"MM032020_10_26_03h29m19s\"   \"MM042022_09_18_07h29m58s\"   #>  [859] \"MM052022_09_18_03h24m19s\"   \"MM082021_07_09_04h24m15s\"   #>  [861] \"MM012022_05_17_22h24m55s\"   \"MM032020_10_26_03h24m09s\"   #>  [863] \"MM042022_09_18_07h24m25s\"   \"MM052022_09_18_03h25m25s\"   #>  [865] \"MM082021_07_09_04h23m55s_1\" \"MM092022_09_18_04h23m11s\"   #>  [867] \"MM012022_05_17_22h23m59s\"   \"MM032020_10_26_03h23m16s\"   #>  [869] \"MM042022_09_18_07h23m39s\"   \"MM052022_09_18_03h25m09s\"   #>  [871] \"MM082021_07_09_04h23m41s\"   \"MM092022_09_18_04h24m17s\"   #>  [873] \"MM012022_05_17_22h24m27s\"   \"MM032020_10_26_05h23m35s\"   #>  [875] \"MM042022_09_18_09h23m43s\"   \"MM052022_09_18_05h25m45s\"   #>  [877] \"MM082021_07_09_06h25m17s\"   \"MM092022_09_18_06h23m13s\"   #>  [879] \"MM012022_05_18_00h23m09s\"   \"MM032020_10_26_05h23m11s\"   #>  [881] \"MM042022_09_18_09h23m11s\"   \"MM052022_09_18_05h25m45s_1\" #>  [883] \"MM082021_07_09_06h23m29s\"   \"MM092022_09_18_06h23m37s\"   #>  [885] \"MM012022_05_18_00h23m45s\"   \"MM032020_10_26_05h22m56s\"   #>  [887] \"MM042022_09_18_09h23m06s\"   \"MM052022_09_18_05h23m13s\"   #>  [889] \"MM082021_07_09_06h22m59s\"   \"MM092022_09_18_06h23m36s\"   #>  [891] \"MM012022_05_18_00h23m08s\"   \"MM032020_10_26_05h23m24s\"   #>  [893] \"MM042022_09_18_09h23m15s\"   \"MM052022_09_18_05h23m45s\"   #>  [895] \"MM082021_07_09_06h23m45s\"   \"MM092022_09_18_06h23m32s\"   #>  [897] \"MM012022_05_18_00h25m45s\"   \"MM032020_10_26_05h23m10s\"   #>  [899] \"MM042022_09_18_09h23m38s\"   \"MM052022_09_18_05h23m43s\"   #>  [901] \"MM082021_07_09_06h23m22s\"   \"MM092022_09_18_06h23m51s\"   #>  [903] \"MM012022_05_18_00h23m19s\"   \"MM032020_10_26_05h25m06s\"   #>  [905] \"MM042022_09_18_09h25m08s\"   \"MM052022_09_18_05h25m08s\"   #>  [907] \"MM082021_07_09_06h24m45s\"   \"MM092022_09_18_06h25m00s\"   #>  [909] \"MM012022_05_18_00h24m55s\"   \"MM032020_10_26_05h23m15s\"   #>  [911] \"MM042022_09_18_09h23m16s\"   \"MM082021_07_09_06h23m18s\"   #>  [913] \"MM012022_05_18_00h23m59s\"   \"MM032020_10_26_05h23m12s\"   #>  [915] \"MM042022_09_18_09h23m07s\"   \"MM052022_09_18_05h23m15s\"   #>  [917] \"MM082021_07_09_06h23m27s\"   \"MM012022_05_18_00h23m47s\"   #>  [919] \"MM032020_10_26_05h23m37s\"   \"MM042022_09_18_09h23m57s\"   #>  [921] \"MM052022_09_18_05h23m57s\"   \"MM082021_07_09_06h23m47s\"   #>  [923] \"MM092022_09_18_06h24m21s\"   \"MM012022_05_18_00h24m17s\"   #>  [925] \"MM032020_10_26_05h23m46s\"   \"MM042022_09_18_09h23m08s\"   #>  [927] \"MM052022_09_18_05h23m55s\"   \"MM082021_07_09_06h23m23s\"   #>  [929] \"MM092022_09_18_06h23m31s\"   \"MM012022_05_18_00h23m29s\"   #>  [931] \"MM032020_10_26_05h22m59s\"   \"MM042022_09_18_09h23m11s_1\" #>  [933] \"MM052022_09_18_05h24m21s\"   \"MM082021_07_09_06h23m56s\"   #>  [935] \"MM092022_09_18_06h24m18s\"   \"MM012022_05_18_00h24m15s\"   #>  [937] \"MM032020_10_26_05h22m54s\"   \"MM042022_09_18_09h22m53s\"   #>  [939] \"MM052022_09_18_05h24m25s\"   \"MM082021_07_09_06h23m13s\"   #>  [941] \"MM092022_09_18_06h24m06s\"   \"MM012022_05_18_00h23m11s\"   #>  [943] \"MM032020_10_26_05h24m21s\"   \"MM042022_09_18_09h24m14s\"   #>  [945] \"MM052022_09_18_05h24m47s\"   \"MM082021_07_09_06h24m10s\"   #>  [947] \"MM092022_09_18_06h24m35s\"   \"MM012022_05_18_00h24m26s\"   #>  [949] \"MM032020_10_26_05h23m36s\"   \"MM042022_09_18_09h23m41s\"   #>  [951] \"MM052022_09_18_05h24m25s_1\" \"MM082021_07_09_06h23m52s\"   #>  [953] \"MM092022_09_18_06h23m52s\"   \"MM012022_05_18_00h23m57s\"   #>  [955] \"MM032020_10_26_05h22m55s\"   \"MM042022_09_18_09h23m25s\"   #>  [957] \"MM052022_09_18_05h23m05s\"   \"MM082021_07_09_06h22m59s_1\" #>  [959] \"MM092022_09_18_06h23m22s\"   \"MM012022_05_18_00h23m24s\"   #>  [961] \"MM032020_10_26_05h24m08s\"   \"MM042022_09_18_09h24m13s\"   #>  [963] \"MM052022_09_18_05h23m47s\"   \"MM082021_07_09_06h23m39s\"   #>  [965] \"MM092022_09_18_06h24m24s\"   \"MM012022_05_18_00h24m18s\"   #>  [967] \"MM032020_10_26_05h25m51s\"   \"MM042022_09_18_09h26m13s\"   #>  [969] \"MM052022_09_18_05h26m43s\"   \"MM082021_07_09_06h25m57s\"   #>  [971] \"MM092022_09_18_06h26m28s\"   \"MM012022_05_18_00h26m21s\"   #>  [973] \"MM032020_10_26_05h23m40s\"   \"MM042022_09_18_09h23m00s\"   #>  [975] \"MM052022_09_18_05h23m47s_1\" \"MM082021_07_09_06h23m11s\"   #>  [977] \"MM092022_09_18_06h23m20s\"   \"MM012022_05_18_00h23m51s\"   #>  [979] \"MM032020_10_26_05h34m38s\"   \"MM042022_09_18_09h23m53s\"   #>  [981] \"MM052022_09_18_05h24m35s\"   \"MM082021_07_09_06h24m01s\"   #>  [983] \"MM092022_09_18_06h24m43s\"   \"MM012022_05_18_00h24m41s\"   #>  [985] \"MM042022_09_18_09h23m44s\"   \"MM052022_09_18_05h24m09s\"   #>  [987] \"MM082021_07_09_06h23m38s\"   \"MM092022_09_18_06h24m29s\"   #>  [989] \"MM012022_05_18_00h24m00s\"   \"MM032020_10_26_05h26m02s\"   #>  [991] \"MM042022_09_18_09h26m03s\"   \"MM052022_09_18_05h26m39s\"   #>  [993] \"MM082021_07_09_06h26m05s\"   \"MM092022_09_18_06h26m20s\"   #>  [995] \"MM012022_05_18_00h26m31s\"   \"MM032020_10_26_05h24m06s\"   #>  [997] \"MM042022_09_18_09h26m19s\"   \"MM052022_09_18_05h24m25s_2\" #>  [999] \"MM092022_09_18_06h24m51s\"   \"MM032020_10_26_05h23m32s\"   #> [1001] \"MM042022_09_18_09h23m45s\"   \"MM052022_09_18_05h24m11s\"   #> [1003] \"MM082021_07_09_06h23m51s\"   \"MM092022_09_18_06h25m49s\"   #> [1005] \"MM012022_05_18_00h24m16s\"   \"MM032020_10_26_05h22m54s_1\" #> [1007] \"MM042022_09_18_09h23m14s\"   \"MM052022_09_18_05h24m03s\"   #> [1009] \"MM082021_07_09_06h23m15s\"   \"MM092022_09_18_06h24m01s\"   #> [1011] \"MM012022_05_18_00h23m19s_1\" \"MM032020_10_26_05h23m08s\"   #> [1013] \"MM042022_09_18_09h23m33s\"   \"MM082021_07_09_06h24m18s\"   #> [1015] \"MM092022_09_18_06h23m09s\"   \"MM012022_05_18_00h23m13s\"   #> [1017] \"MM032020_10_26_05h23m03s\"   \"MM042022_09_18_09h23m09s\"   #> [1019] \"MM052022_09_18_05h23m55s_1\" \"MM082021_07_09_06h23m11s_1\" #> [1021] \"MM092022_09_18_06h23m11s\"   \"MM012022_05_18_00h23m13s_1\" #> [1023] \"MM032020_10_26_05h23m27s\"   \"MM042022_09_18_09h23m05s\"   #> [1025] \"MM052022_09_18_05h24m22s\"   \"MM082021_07_09_06h23m17s\"   #> [1027] \"MM092022_09_18_06h23m29s\"   \"MM012022_05_18_00h23m25s\"   #> [1029] \"MM032020_10_26_05h23m35s_1\" \"MM042022_09_18_09h23m41s_1\" #> [1031] \"MM052022_09_18_05h23m20s\"   \"MM082021_07_09_06h23m43s\"   #> [1033] \"MM092022_09_18_06h23m39s\"   \"MM012022_05_18_00h23m15s\"   #> [1035] \"MM032020_10_26_05h23m28s\"   \"MM042022_09_18_09h23m29s\"   #> [1037] \"MM052022_09_18_05h23m55s_2\" \"MM082021_07_09_06h23m37s\"   #> [1039] \"MM092022_09_18_06h23m45s\"   \"MM012022_05_18_00h23m57s_1\" #> [1041] \"MM032020_10_26_05h22m54s_2\" \"MM042022_09_18_09h23m06s_1\" #> [1043] \"MM052022_09_18_05h23m17s\"   \"MM082021_07_09_06h22m55s\"   #> [1045] \"MM092022_09_18_06h23m05s\"   \"MM012022_05_18_00h23m07s\"   #> [1047] \"MM052022_09_18_05h24m12s\"   \"MM082021_07_09_06h24m59s\"   #> [1049] \"MM092022_09_18_06h25m51s\"   \"MM012022_05_18_00h25m57s\"   #> [1051] \"MM032020_10_26_05h23m21s\"   \"MM042022_09_18_09h25m46s\"   #> [1053] \"MM052022_09_18_05h24m24s\"   \"MM082021_07_09_06h23m59s\"   #> [1055] \"MM092022_09_18_06h25m44s\"   \"MM012022_05_18_00h24m50s\"   #> [1057] \"MM032020_10_26_05h23m30s\"   \"MM042022_09_18_09h23m29s_1\" #> [1059] \"MM052022_09_18_05h23m39s_1\" \"MM082021_07_09_06h23m39s_1\" #> [1061] \"MM092022_09_18_06h23m13s_1\" \"MM012022_05_18_00h24m53s\"   #> [1063] \"MM032020_10_26_05h24m35s\"   \"MM042022_09_18_09h24m35s\"   #> [1065] \"MM052022_09_18_05h24m38s\"   \"MM082021_07_09_06h25m02s\"   #> [1067] \"MM092022_09_18_06h23m18s\"   \"MM012022_05_18_00h24m03s\"   #> [1069] \"MM032020_10_26_05h23m17s\"   \"MM042022_09_18_09h24m42s\"   #> [1071] \"MM052022_09_18_05h23m16s\"   \"MM082021_07_09_06h24m09s\"   #> [1073] \"MM092022_09_18_06h23m43s\"   \"MM012022_05_18_00h24m13s\"   #> [1075] \"MM032020_10_26_05h24m02s\"   \"MM042022_09_18_09h23m48s\"   #> [1077] \"MM052022_09_18_05h25m15s\"   \"MM082021_07_09_06h25m13s\"   #> [1079] \"MM092022_09_18_06h23m47s\"   \"MM012022_05_18_00h24m02s\"   #> [1081] \"MM032020_10_26_05h26m32s\"   \"MM042022_09_18_09h25m09s\"   #> [1083] \"MM052022_09_18_05h25m11s\"   \"MM082021_07_09_06h25m04s\"   #> [1085] \"MM092022_09_18_06h25m09s\"   \"MM032020_10_26_05h23m37s_1\" #> [1087] \"MM042022_09_18_09h23m02s\"   \"MM052022_09_18_05h23m49s\"   #> [1089] \"MM082021_07_09_06h23m05s\"   \"MM092022_09_18_06h23m52s_1\" #> [1091] \"MM032020_10_26_05h26m44s\"   \"MM042022_09_18_09h26m45s\"   #> [1093] \"MM052022_09_18_05h27m01s\"   \"MM082021_07_09_06h26m58s\"   #> [1095] \"MM092022_09_18_06h27m09s\"   \"MM012022_05_18_00h22m59s\"   #> [1097] \"MM032020_10_26_05h23m28s_1\" \"MM042022_09_18_09h22m59s\"   #> [1099] \"MM052022_09_18_05h23m48s\"   \"MM082021_07_09_06h23m09s\"   #> [1101] \"MM092022_09_18_06h23m28s\"   \"MM012022_05_18_00h23m25s_1\" #> [1103] \"MM032020_10_26_05h24m53s\"   \"MM042022_09_18_09h24m50s\"   #> [1105] \"MM052022_09_18_05h25m09s\"   \"MM082021_07_09_06h24m45s_1\" #> [1107] \"MM092022_09_18_06h25m09s_1\" \"MM012022_05_18_00h24m54s\"   #> [1109] \"MM032020_10_26_05h24m16s\"   \"MM042022_09_18_09h24m19s\"   #> [1111] \"MM052022_09_18_05h23m59s\"   \"MM082021_07_09_06h23m47s_1\" #> [1113] \"MM092022_09_18_06h23m44s\"   \"MM012022_05_18_00h23m55s\"   #> [1115] \"MM032020_10_26_05h25m03s\"   \"MM052022_09_18_05h25m14s\"   #> [1117] \"MM082021_07_09_06h24m35s\"   \"MM092022_09_18_06h24m43s_1\" #> [1119] \"MM012022_05_18_00h25m07s\"   \"MM032020_10_26_05h23m30s_1\" #> [1121] \"MM042022_09_18_09h23m39s\"   \"MM052022_09_18_05h23m35s\"   #> [1123] \"MM082021_07_09_06h23m46s\"   \"MM092022_09_18_06h23m34s\"   #> [1125] \"MM012022_05_18_00h23m35s\"   \"MM032020_10_26_06h24m05s\"   #> [1127] \"MM042022_09_18_10h24m05s\"   \"MM052022_09_18_06h24m30s\"   #> [1129] \"MM082021_07_09_07h24m17s\"   \"MM092022_09_18_07h24m08s\"   #> [1131] \"MM012022_05_18_01h24m23s\"   \"MM032020_10_26_06h23m11s\"   #> [1133] \"MM042022_09_18_10h23m07s\"   \"MM052022_09_18_06h23m59s\"   #> [1135] \"MM082021_07_09_07h23m48s\"   \"MM092022_09_18_07h23m44s\"   #> [1137] \"MM012022_05_18_01h23m33s\"   \"MM032020_10_26_06h23m30s\"   #> [1139] \"MM042022_09_18_10h23m07s_1\" \"MM052022_09_18_06h24m04s\"   #> [1141] \"MM082021_07_09_07h23m35s\"   \"MM092022_09_18_07h23m46s\"   #> [1143] \"MM012022_05_18_01h23m43s\"   \"MM032020_10_26_06h23m30s_1\" #> [1145] \"MM042022_09_18_10h23m44s\"   \"MM052022_09_18_06h24m03s\"   #> [1147] \"MM082021_07_09_07h25m27s\"   \"MM012022_05_18_01h24m00s\"   #> [1149] \"MM032020_10_26_06h23m29s\"   \"MM042022_09_18_10h23m31s\"   #> [1151] \"MM052022_09_18_06h23m55s\"   \"MM082021_07_09_07h23m17s\"   #> [1153] \"MM092022_09_18_07h23m54s\"   \"MM012022_05_18_01h23m45s\"   #> [1155] \"MM032020_10_26_06h23m50s\"   \"MM042022_09_18_10h23m29s\"   #> [1157] \"MM052022_09_18_06h26m23s\"   \"MM082021_07_09_07h23m00s\"   #> [1159] \"MM092022_09_18_07h23m22s\"   \"MM012022_05_18_01h23m47s\"   #> [1161] \"MM032020_10_26_06h23m15s\"   \"MM042022_09_18_10h23m01s\"   #> [1163] \"MM052022_09_18_06h23m21s\"   \"MM082021_07_09_07h23m55s\"   #> [1165] \"MM092022_09_18_07h23m21s\"   \"MM012022_05_18_01h23m03s\"   #> [1167] \"MM032020_10_26_06h23m08s\"   \"MM042022_09_18_10h23m03s\"   #> [1169] \"MM052022_09_18_06h23m34s\"   \"MM082021_07_09_07h23m56s\"   #> [1171] \"MM092022_09_18_07h23m57s\"   \"MM012022_05_18_01h23m05s\"   #> [1173] \"MM032020_10_26_06h22m46s\"   \"MM042022_09_18_10h23m40s\"   #> [1175] \"MM052022_09_18_06h24m13s\"   \"MM082021_07_09_07h23m35s_1\" #> [1177] \"MM092022_09_18_07h23m22s_1\" \"MM012022_05_18_01h23m53s\"   #> [1179] \"MM032020_10_26_06h22m51s\"   \"MM052022_09_18_06h22m45s\"   #> [1181] \"MM082021_07_09_07h23m01s\"   \"MM092022_09_18_07h25m38s\"   #> [1183] \"MM012022_05_18_01h24m22s\"   \"MM032020_10_26_07h25m06s\"   #> [1185] \"MM042022_09_18_11h25m19s\"   \"MM052022_09_18_07h25m47s\"   #> [1187] \"MM082021_07_09_08h25m38s\"   \"MM092022_09_18_08h25m21s\"   #> [1189] \"MM012022_05_18_02h25m19s\"   \"MM032020_10_26_07h25m02s\"   #> [1191] \"MM042022_09_18_11h25m21s\"   \"MM052022_09_18_07h25m06s\"   #> [1193] \"MM082021_07_09_08h25m27s\"   \"MM092022_09_18_08h25m25s\"   #> [1195] \"MM012022_05_18_02h25m11s\"   \"MM032020_10_26_07h23m27s\"   #> [1197] \"MM042022_09_18_11h23m25s\"   \"MM052022_09_18_07h23m45s\"   #> [1199] \"MM082021_07_09_08h23m01s\"   \"MM092022_09_18_08h23m10s\"   #> [1201] \"MM012022_05_18_02h22m55s\"   \"MM032020_10_26_07h23m22s\"   #> [1203] \"MM042022_09_18_11h23m43s\"   \"MM052022_09_18_07h23m55s\"   #> [1205] \"MM082021_07_09_08h23m53s\"   \"MM092022_09_18_08h23m10s_1\" #> [1207] \"MM012022_05_18_02h23m48s\"   \"MM032020_10_26_07h24m42s\"   #> [1209] \"MM042022_09_18_11h24m34s\"   \"MM052022_09_18_07h25m17s\"   #> [1211] \"MM082021_07_09_08h25m07s\"   \"MM092022_09_18_08h25m10s\"   #> [1213] \"MM012022_05_18_02h26m20s\"   \"MM032020_10_26_07h24m01s\"   #> [1215] \"MM042022_09_18_11h23m19s\"   \"MM052022_09_18_07h24m21s\"   #> [1217] \"MM082021_07_09_08h23m42s\"   \"MM092022_09_18_08h24m52s\"   #> [1219] \"MM012022_05_18_02h24m49s\"   \"MM032020_10_26_07h23m01s\"   #> [1221] \"MM042022_09_18_11h23m11s\"   \"MM052022_09_18_07h23m35s\"   #> [1223] \"MM082021_07_09_08h23m16s\"   \"MM092022_09_18_08h23m31s\"   #> [1225] \"MM012022_05_18_02h23m43s\"   \"MM032020_10_26_07h23m32s\"   #> [1227] \"MM042022_09_18_11h23m53s\"   \"MM052022_09_18_07h23m39s\"   #> [1229] \"MM082021_07_09_08h23m25s\"   \"MM012022_05_18_02h24m15s\"   #> [1231] \"MM042022_09_18_11h23m11s_1\" \"MM052022_09_18_07h37m17s\"   #> [1233] \"MM082021_07_09_08h37m21s\"   \"MM092022_09_18_08h37m31s\"   #> [1235] \"MM032020_10_26_07h22m59s\"   \"MM042022_09_18_11h23m45s\"   #> [1237] \"MM052022_09_18_07h23m30s\"   \"MM082021_07_09_08h23m41s\"   #> [1239] \"MM092022_09_18_08h23m34s\"   \"MM012022_05_18_02h23m39s\"   #> [1241] \"MM032020_10_26_07h23m23s\"   \"MM042022_09_18_11h23m45s_1\" #> [1243] \"MM052022_09_18_07h23m55s_1\" \"MM082021_07_09_08h23m27s\"   #> [1245] \"MM092022_09_18_08h24m09s\"   \"MM012022_05_18_02h23m33s\"   #> [1247] \"MM032020_10_26_07h22m58s\"   \"MM042022_09_18_11h23m07s\"   #> [1249] \"MM052022_09_18_07h23m25s\"   \"MM082021_07_09_08h23m15s\"   #> [1251] \"MM092022_09_18_08h23m40s\"   \"MM012022_05_18_02h23m11s\"   #> [1253] \"MM032020_10_26_07h22m54s\"   \"MM042022_09_18_11h22m48s\"   #> [1255] \"MM052022_09_18_07h23m41s\"   \"MM082021_07_09_08h22m41s\"   #> [1257] \"MM092022_09_18_08h27m05s\"   \"MM012022_05_18_02h23m03s\"   #> [1259] \"MM032020_10_26_07h23m17s\"   \"MM042022_09_18_11h24m07s\"   #> [1261] \"MM052022_09_18_07h23m48s\"   \"MM082021_07_09_08h22m59s\"   #> [1263] \"MM092022_09_18_08h22m49s\"   \"MM012022_05_18_02h23m36s\"   #> [1265] \"MM032020_10_26_07h23m31s\"   \"MM042022_09_18_11h23m29s\"   #> [1267] \"MM052022_09_18_07h23m43s\"   \"MM082021_07_09_08h23m35s\"   #> [1269] \"MM092022_09_18_08h23m43s\"   \"MM012022_05_18_02h23m21s\"   #> [1271] \"MM032020_10_26_07h23m01s_1\" \"MM042022_09_18_11h23m04s\"   #> [1273] \"MM052022_09_18_07h23m04s\"   \"MM082021_07_09_08h23m06s\"   #> [1275] \"MM012022_05_18_02h23m24s\"   \"MM032020_10_26_07h22m49s\"   #> [1277] \"MM042022_09_18_11h22m46s\"   \"MM052022_09_18_07h23m01s\"   #> [1279] \"MM082021_07_09_08h22m53s\"   \"MM092022_09_18_08h23m02s\"   #> [1281] \"MM012022_05_18_02h23m01s\"   \"MM032020_10_26_07h23m05s\"   #> [1283] \"MM042022_09_18_11h23m01s\"   \"MM052022_09_18_07h23m11s\"   #> [1285] \"MM082021_07_09_08h23m07s\"   \"MM092022_09_18_08h23m03s\"   #> [1287] \"MM012022_05_18_02h23m15s\"   \"MM032020_10_26_07h22m55s\"   #> [1289] \"MM042022_09_18_11h23m03s\"   \"MM052022_09_18_07h23m47s\"   #> [1291] \"MM082021_07_09_08h22m59s_1\" \"MM092022_09_18_08h23m37s\"   #> [1293] \"MM012022_05_18_02h23m15s_1\" \"MM042022_09_18_11h23m25s_1\" #> [1295] \"MM052022_09_18_07h24m11s\"   \"MM082021_07_09_08h23m08s\"   #> [1297] \"MM012022_05_18_02h23m19s\"   \"MM032020_10_26_07h23m05s_1\" #> [1299] \"MM042022_09_18_11h23m08s\"   \"MM052022_09_18_07h23m31s\"   #> [1301] \"MM082021_07_09_08h23m09s\"   \"MM092022_09_18_08h23m22s\"   #> [1303] \"MM012022_05_18_02h23m31s\"   \"MM032020_10_26_07h23m26s\"   #> [1305] \"MM042022_09_18_11h23m51s\"   \"MM052022_09_18_07h24m30s\"   #> [1307] \"MM082021_07_09_08h24m47s\"   \"MM092022_09_18_08h22m50s\"   #> [1309] \"MM012022_05_18_02h24m07s\"   \"MM032020_10_26_07h23m17s_1\" #> [1311] \"MM042022_09_18_11h23m21s\"   \"MM052022_09_18_07h23m47s_1\" #> [1313] \"MM082021_07_09_08h23m07s_1\" \"MM092022_09_18_08h23m23s\"   #> [1315] \"MM012022_05_18_02h23m17s\"   \"MM032020_10_26_07h22m56s\"   #> [1317] \"MM042022_09_18_11h23m03s_1\" \"MM052022_09_18_07h23m15s\"   #> [1319] \"MM082021_07_09_08h23m07s_2\" \"MM092022_09_18_08h23m17s\"   #> [1321] \"MM012022_05_18_02h23m57s\"   \"MM032020_10_26_08h23m36s\"   #> [1323] \"MM042022_09_18_12h23m33s\"   \"MM052022_09_18_08h23m59s\"   #> [1325] \"MM082021_07_09_09h24m54s\"   \"MM092022_09_18_09h23m46s\"   #> [1327] \"MM012022_05_18_03h24m01s\"   \"MM032020_10_26_08h22m54s\"   #> [1329] \"MM042022_09_18_12h24m57s\"   \"MM052022_09_18_08h25m03s\"   #> [1331] \"MM082021_07_09_09h26m17s\"   \"MM012022_05_18_03h24m45s\"   #> [1333] \"MM032020_10_26_08h23m32s\"   \"MM042022_09_18_12h23m47s\"   #> [1335] \"MM052022_09_18_08h23m45s\"   \"MM082021_07_09_09h23m46s\"   #> [1337] \"MM092022_09_18_09h24m03s\"   \"MM012022_05_18_03h23m50s\"   #> [1339] \"MM032020_10_26_08h24m36s\"   \"MM042022_09_18_12h24m17s\"   #> [1341] \"MM052022_09_18_08h24m45s\"   \"MM082021_07_09_09h24m33s\"   #> [1343] \"MM092022_09_18_09h24m42s\"   \"MM012022_05_18_03h24m55s\"   #> [1345] \"MM032020_10_26_08h23m24s\"   \"MM042022_09_18_12h23m14s\"   #> [1347] \"MM052022_09_18_08h24m45s_1\" \"MM082021_07_09_09h24m55s\"   #> [1349] \"MM012022_05_18_03h24m27s\"   \"MM032020_10_26_08h24m17s\"   #> [1351] \"MM042022_09_18_12h24m32s\"   \"MM052022_09_18_08h23m27s\"   #> [1353] \"MM082021_07_09_09h24m25s\"   \"MM092022_09_18_09h23m47s\"   #> [1355] \"MM012022_05_18_03h24m34s\"   \"MM032020_10_26_08h23m04s\"   #> [1357] \"MM042022_09_18_12h23m11s\"   \"MM052022_09_18_08h23m44s\"   #> [1359] \"MM082021_07_09_09h23m19s\"   \"MM092022_09_18_09h23m05s\"   #> [1361] \"MM012022_05_18_03h23m25s\"   \"MM032020_10_26_10h27m19s\"   #> [1363] \"MM042022_09_18_14h27m07s\"   \"MM052022_09_18_10h27m35s\"   #> [1365] \"MM082021_07_09_11h27m35s\"   \"MM092022_09_18_11h27m29s\"   #> [1367] \"MM012022_05_18_05h27m29s\"   \"MM032020_10_26_10h23m08s\"   #> [1369] \"MM042022_09_18_14h23m07s\"   \"MM052022_09_18_10h23m26s\"   #> [1371] \"MM082021_07_09_11h23m25s\"   \"MM092022_09_18_11h23m18s\"   #> [1373] \"MM012022_05_18_05h27m33s\"   \"MM032020_10_26_10h23m24s\"   #> [1375] \"MM042022_09_18_14h23m37s\"   \"MM052022_09_18_10h23m13s\"   #> [1377] \"MM082021_07_09_11h23m09s\"   \"MM092022_09_18_11h23m32s\"   #> [1379] \"MM032020_10_26_10h23m13s\"   \"MM042022_09_18_14h23m18s\"   #> [1381] \"MM052022_09_18_10h23m36s\"   \"MM082021_07_09_11h23m07s\"   #> [1383] \"MM092022_09_18_11h23m18s_1\" \"MM012022_05_18_05h23m19s\"   #> [1385] \"MM032020_10_26_10h23m19s\"   \"MM042022_09_18_14h24m08s\"   #> [1387] \"MM052022_09_18_10h23m39s\"   \"MM082021_07_09_11h23m37s\"   #> [1389] \"MM092022_09_18_11h23m33s\"   \"MM012022_05_18_05h23m33s\"    mm_csv_unfiltered <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column = \"File (mite ID)\", verbose = FALSE, clean=FALSE ) dim(mm_csv_unfiltered) #> [1] 76032    35 mm_csv_unfiltered$File_name |> unique() |> length() #> [1] 53  mm_xlsx <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   format_metadata = \"xlsx\", verbose = FALSE ) #> Warning: Expecting numeric in I1231 / R1231C9: got 'NA' #> Warning: Expecting numeric in L1231 / R1231C12: got 'NA' #> Warning: Expecting numeric in I1237 / R1237C9: got 'NA' #> Warning: Expecting numeric in L1237 / R1237C12: got 'NA' #> Warning: Expecting numeric in I1514 / R1514C9: got 'NA' #> Warning: Expecting numeric in L1514 / R1514C12: got 'NA' #> Warning: Expecting numeric in I1515 / R1515C9: got 'NA' #> Warning: Expecting numeric in L1515 / R1515C12: got 'NA' #> Warning: Expecting numeric in I1516 / R1516C9: got 'NA' #> Warning: Expecting numeric in L1516 / R1516C12: got 'NA' #> Warning: Expecting numeric in I1517 / R1517C9: got 'NA' #> Warning: Expecting numeric in L1517 / R1517C12: got 'NA' #> Warning: Expecting numeric in I1518 / R1518C9: got 'NA' #> Warning: Expecting numeric in L1518 / R1518C12: got 'NA' #> Warning: Expecting numeric in I1519 / R1519C9: got 'NA' #> Warning: Expecting numeric in L1519 / R1519C12: got 'NA' #> New names: #> • `MiteID` -> `MiteID...1` #> • `MiteID` -> `MiteID...4`  dim(mm_xlsx) #> [1] 70828    35  # mm_xlsx$Date <- #   as.POSIXct(strptime(mm_xlsx$Date, \"%d/%m/%Y\"))  mm_wo_metadata <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   format_metadata = NULL, verbose = FALSE )  dim(mm_wo_metadata) #> [1] 72257    16"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"Import mitemap multiple folders","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"","code":"import_mitemap_from_multiple_folder(   folders = NULL,   path_to_metadata = NULL,   return_with_logs = FALSE,   verbose = TRUE,   ... )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"folders (required) list path folders path_to_metadata list path metadata files. Can left NULL metadata files located roots folders metadata used (metadata_format=NULL). return_with_logs (Logical, default FALSE). TRUE, returning object list 4 elements containing useful information explore unmatching name file_names metadata. verbose (logical). TRUE, print additional information. ... params passed import_mitemap()","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"tibble list 4 elements return_with_logs TRUE. See ?import_mitemap()","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/import_mitemap_from_multiple_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import mitemap from multiple folders — import_mitemap_from_multiple_folder","text":"","code":"if (FALSE) { # \\dontrun{ mm <- import_mitemap_from_multiple_folder(list( system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"), system.file(\"extdata\", \"mitemap_example_large\", package = \"MiteMapTools\")) )  mm_logs <- import_mitemap_from_multiple_folder(c( system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"), system.file(\"extdata\", \"mitemap_example_large\", package = \"MiteMapTools\")), return_with_logs=TRUE )  mm_logs$files_not_in_metadata } # }"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder(s) with heatmap — extract_heatmap","title":"Create folder(s) with heatmap — extract_heatmap","text":"Create folder(s) heatmap","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder(s) with heatmap — extract_heatmap","text":"","code":"extract_heatmap(   path_to_folder,   output_path = \"Heatmap\",   path_to_metadata = NULL,   format_metadata = \"csv\",   modality = \"Modality\",   subfolder_by_farm = TRUE,   subfolder_by_modality = TRUE,   dec = \",\",   skip = 1,   colnames_metadata = c(\"Run_number\", \"File_name\", \"Date\", \"Start_time\", \"Farm\",     \"MiteMap_number\", \"Bag\", \"Modality\"),   force = FALSE )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder(s) with heatmap — extract_heatmap","text":"path_to_folder Path folder output_path (default =  \"Heatmap\") path_to_metadata Path metadata format_metadata (either csv xlsx) modality (character, default \"Modality\") Set column names create subfolder levels modality subfolder_by_farm (Logical, default = TRUE) create subfolder farm subfolder_by_modality (Logical, default = TRUE) create subfolder modality set parameter modality dec decimal csv metadata files. skip (default 1) skip first line metadata files. colnames_metadata Column names metadata column. Note File_name required must correspond names zip files. force Force overwriting path output_path","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create folder(s) with heatmap — extract_heatmap","text":"Nothing. Create files folders.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create folder(s) with heatmap — extract_heatmap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create folder(s) with heatmap — extract_heatmap","text":"","code":"extract_heatmap(system.file(\"extdata\", \"POUL6\", package = \"MiteMapTools\")) unlink(\"Heatmap\", recursive = TRUE)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap_from_multiple_folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","title":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","text":"Create folders heatmap multiples folders","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap_from_multiple_folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","text":"","code":"extract_heatmap_from_multiple_folders(folders, ...)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap_from_multiple_folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","text":"folders list path ... params passed extract_heatmap()","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap_from_multiple_folders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","text":"Nothing. Create files folders.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/make_heatmap_from_multiple_folders.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create folders with heatmap from multiples folders — extract_heatmap_from_multiple_folders","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual map — plot_ind_mitemap","title":"Plot individual map — plot_ind_mitemap","text":"Plot individual map","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual map — plot_ind_mitemap","text":"","code":"plot_ind_mitemap(   MiteMap,   file_names = NULL,   ind_index = c(1),   time_animation = FALSE,   add_base_circle = FALSE,   add_odor_source = TRUE,   label_odor_source = NULL,   center_base_circle = c(0, 0),   breaks_animation = 10,   diameter_base_circle = 40,   npoints_base_circle = 100,   linewidth = 1.2,   alpha_shadow = 0.4 )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual map — plot_ind_mitemap","text":"MiteMap MiteMap (required) result import_mitemap ($resulting_data) raw_data file_names (vector string, default = NULL) names file(s) (individual(s)) want plot (e.g. c(\"MM012022_05_17_13h25m12s\", \"MM012022_05_17_09h23m48s\")). NULL, ind_index ignored. ind_index (vector int, default = c(1)) index numbers file(s) (individual(s)) want plot time_animation (logical, default FALSE) plot animate using gganimate ?#' add_base_circle (logical, default FALSE) base circle plot ? add_odor_source (logical, default TRUE) odor source plot ? label_odor_source (string, default = NULL) Label odor source. used add_odor_source TRUE. NULL, label added. center_base_circle (int) center base circle. used center_base_circle TRUE. breaks_animation (int) number breaks animation. used time_animation TRUE. diameter_base_circle (int) diameter base circle. used center_base_circle TRUE. npoints_base_circle (int) number point draw base circle. used center_base_circle TRUE. linewidth (int) linewidth path alpha_shadow (int [0,1]) Alpha value (transparency) shadow path. used time_animation` TRUE.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot individual map — plot_ind_mitemap","text":"list ggplot object","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot individual map — plot_ind_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/plot_ind_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot individual map — plot_ind_mitemap","text":"","code":"MM <- import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column=\"File (mite ID)\",   verbose= FALSE )  library(patchwork) p <- plot_ind_mitemap(MM, file_names=c( \"MM012022_05_17_13h22m59s\", \"MM012022_05_17_08h23m05s\")) p[[1]] + p[[2]] & theme(legend.position = \"none\")    p_l <- plot_ind_mitemap(MM, ind_index = c(1, 2)) p_l[[1]] + p_l[[2]] & theme(legend.position = \"none\")   p_l_base_c <- plot_ind_mitemap(MM, add_base_circle = TRUE, linewidth = 1.7,     label_odor_source = \"Odor source\") p_l_base_c[[1]] + scale_color_gradient(name = \"Speed\", trans = \"log10\", low = \"cyan\", high = \"red\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale. #> Warning: log-10 transformation introduced infinite values.   if(!requireNamespace(\"gganimate\", quietly = TRUE)){  p_l_anim <- plot_ind_mitemap(MM, time_animation = TRUE, breaks_animation = 15) p_l_anim[[1]]  p_l <- plot_ind_mitemap(MM, ind_index = c(1:6)) (p_l[[1]] + p_l[[2]] + p_l[[3]]) /   (p_l[[4]] + p_l[[5]] + p_l[[6]]) +   plot_layout(guides = \"collect\") & scale_color_gradient(   name = \"Speed\", trans = \"log1p\", low = \"cyan\", high = \"red\",   limits = c(     min(unlist(lapply(p_l, function(x) {       min(x$data$dist_from_i_minus_1, na.rm = T)     }))),     max(unlist(lapply(p_l, function(x) {       max(x$data$dist_from_i_minus_1, na.rm = T)     })))   ) )  (p_l[[1]] + p_l[[2]] + p_l[[3]]) /   (p_l[[4]] + p_l[[5]] + p_l[[6]]) +   plot_layout(guides = \"collect\") &     scale_color_viridis_c(name = \"Speed\", trans = \"log1p\", limits = c(0, 2))  }"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/rename_files_with_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename files with number inside a folder — rename_files_with_number","title":"Rename files with number inside a folder — rename_files_with_number","text":"MiteMap software may export zip files parenthesis space name (example \"file (1).zip\", can problematic. function rename files adding number inside parenthesis extension (example \"My_file_1.zip\"). also rename files inside zip file avoid confusion. Note name csv inside zip file parenthesis parenthesis name. function add number end csv file order match zip file name. keep_original TRUE, original zip files parenthesis kept. Note renaming must also done metadata files using import_mitemap() function.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/rename_files_with_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename files with number inside a folder — rename_files_with_number","text":"","code":"rename_files_with_number(path_to_folder, keep_original = FALSE)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/rename_files_with_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename files with number inside a folder — rename_files_with_number","text":"path_to_folder (required) Path folder keep_original (logical, default FALSE). keep zip_files parenthesis name?","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/rename_files_with_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename files with number inside a folder — rename_files_with_number","text":"Nothing. modify files folder.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/rename_files_with_number.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename files with number inside a folder — rename_files_with_number","text":"Adrien Taudière","code":""},{"path":[]},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"Summarize MiteMap data individual (File) level","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"","code":"summarize_mitemap(   MiteMap,   num_cols = c(\"distance_from_previous\", \"speed_mm_s\", \"distance_from_sources\",     \"in_left_half_HH\", \"in_left_half_CH\", \"turning_angle_clockwise\", \"turning_angle\",     \"turning_angle_odor_clockwise\", \"turning_angle_odor\", \"turning_angle_ratio_odor\") )"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"MiteMap (required) result import_mitemap num_cols vector names numeric columns summarize mean, sd, min max.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"summary table (tibble) one line per File_name summary statistics. New columns created suffixes corresponding applied summary function: selected numeric columns num_cols summary statistics include mean, standard deviation, minimum, maximum values. character factor columns, first unique value retained. file_name (individual mite) unique metadata, factor columns one value file_name. logical columns, proportion (mean) number TRUE values calculated. number FALSE also calculated. numeric columns, mean value calculated.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/summarize_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize MiteMap data at the individual (File) level — summarize_mitemap","text":"","code":"mm_csv <- suppressWarnings(import_mitemap(   system.file(\"extdata\", \"mitemap_example\", package = \"MiteMapTools\"),   file_name_column=\"File (mite ID)\" )) #>  #> The final number of samples for folder is 76032. #> Rows removed when clearing for run with times sup to maximum_time: 0 (0 runs) #> Rows removed when clearing the first secondes: 603 #> Rows removed when clearing bad x range: 2798 (2 runs) #> Rows removed when clearing bad y range: 0 (0 runs) #> Rows removed when clearing bad x values: 1960 #> Rows removed when clearing bad y values: 26 #>  #> Total rows after filtering: 70828 (from 76032) #> Total runs after filtering: 50 (from 53) sum_mm <- summarize_mitemap(mm_csv) ggplot(sum_mm, aes(x=Treatment, y=distance_from_sources_mean, fill=Treatment)) + ggrain::geom_rain() + coord_flip() #> Registered S3 methods overwritten by 'ggpp': #>   method                  from    #>   heightDetails.titleGrob ggplot2 #>   widthDetails.titleGrob  ggplot2"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make violin plot of MiteMap data — vioplot_mitemap","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"Make violin plot MiteMap data","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"","code":"vioplot_mitemap(MiteMap, factor = NULL, wrap = NULL, prop_points = NULL)"},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"MiteMap (required) result import_mitemap ($resulting_data) raw_data factor : name column present MiteMap separate violin plot. wrap : name column present MiteMap wrap violin plot. prop_points (numeric 0 1, default=NULL) NULL, proportion points randomly sampled added violin plot. can help visualize data distribution, especially large datasets.","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"ggplot object","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"Adrien Taudière","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/reference/vioplot_mitemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make violin plot of MiteMap data — vioplot_mitemap","text":"","code":"vioplot_mitemap(MM_data, \"Treatment\")  vioplot_mitemap(MM_data, factor = \"Treatment\", wrap = \"Biomol_sp\") +   geom_boxplot(col=\"gray60\", width=0.1)      vioplot_mitemap(MM_data, \"Treatment\", prop_points=0.01)"},{"path":[]},{"path":"https://adrientaudiere.github.io/MiteMapTools/news/index.html","id":"improvements-0-0-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"Version 0.0.2 (development version)","text":"Removed HH CH params filter_mitemap(). Computed HH CH formats directly R inside [import_mitemap()].","code":""},{"path":[]},{"path":"https://adrientaudiere.github.io/MiteMapTools/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.0.1","text":"Initial release MiteMapTools package Data Import: Functions import MiteMap data zip archives metadata files ([import_mitemap()], [import_mitemap_from_multiple_folder()]) Data Processing: Filtering cleaning tracking data ([filter_mitemap()]) Individual trajectory plotting ([plot_ind_mitemap()]) Violin plots position distributions ([vioplot_mitemap()]) Movement heatmap generation ([extract_heatmap()]) Statistical Analysis: Binomial tests zone preference analysis ([binom_test_mitemap()]) Geometric Analysis: Convex hull calculations movement characterization ([convex_hull_mitemap()])","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/news/index.html","id":"data-format-support-0-0-1","dir":"Changelog","previous_headings":"","what":"Data Format Support","title":"Version 0.0.1","text":"Raw tracking data (x,y coordinates temporal resolution 0.2s) HH format (Half-Half zone analysis) Comprehensive metadata integration","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/news/index.html","id":"documentation-0-0-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"Version 0.0.1","text":"Complete package documentation biological context Detailed examples use cases Integration Masier et al. (2022) methodology Connection original MiteMap hardware project (LR69/MiteMap)","code":""},{"path":"https://adrientaudiere.github.io/MiteMapTools/news/index.html","id":"dependencies-0-0-1","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"Version 0.0.1","text":"Built tidyverse ecosystem data manipulation Supports Excel CSV metadata formats via readxl Compatible ggplot2 publication-ready visualizations","code":""}]
