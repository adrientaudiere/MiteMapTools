% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_mitemap.R
\name{import_mitemap}
\alias{import_mitemap}
\title{Import MiteMapTools data}
\usage{
import_mitemap(
  path_to_folder,
  path_to_metadata = NULL,
  format_metadata = "csv",
  type_of_files = "raw_data",
  delete_parenthesis = FALSE,
  replace_parenthesis = TRUE,
  delete_space = TRUE,
  messages = TRUE,
  csv_with_correction = FALSE,
  remove_csv_folder = TRUE,
  dec = ",",
  force = FALSE,
  skip = 1,
  colnames_metadata = c("Run_number", "File_name", "Date", "Start_time", "Farm",
    "MiteMap_number", "Bag", "Modality")
)
}
\arguments{
\item{path_to_folder}{Path to the folder with zip files containing csv and with one metadata files in the .xlsx format}

\item{path_to_metadata}{Path to the csv file (or xlsx if format_metadata="xlsx").
If there is only one csv file set path_to_metadata="csv" (or "xlsx").
Need to be set using a complete path to csv file if this file is not in
the folder or if their is multiple xlsx/csv files in the folder.}

\item{format_metadata}{Either csv or xlsx}

\item{type_of_files}{(default : "raw_data") A pattern to select the type
of csv (either "raw_data", "CH" or "HH") files inside the zip files.}

\item{delete_parenthesis}{(Logical, default FALSE) Do we delete parenthesis with a number inside in the name of the files. Note that the name of the csv inside a zip file with a parenthesis do not have parenthesis into this name. Thus the default value to TRUE is recommended either in delete_parenthesis or in replace_parenthesis}

\item{replace_parenthesis}{(Logical, default TRUE) Replace xxx(1) by xxx_1}

\item{delete_space}{(Logical, default TRUE)}

\item{messages}{(Logical, default TRUE) Do we print some warnings?}

\item{csv_with_correction}{(Logical, default FALSE) If TRUE an if present in
the zip files, position files with correction (center and reduce to 0) are used.}

\item{remove_csv_folder}{(Logical, default TRUE) If FALSE, the csv_folder is
kept. May be useful for debugging.}

\item{dec}{decimal for the csv metadata files.}

\item{force}{Force overwriting the path to csv_folder}

\item{skip}{(default 1) skip the first line of the metadata files.}

\item{colnames_metadata}{Column names for metadata column. Note that File_name
is required and must correspond to the names of zip files.}
}
\value{
A list of 4 elements
\itemize{
\item \code{resulting_data}: a (possibly huge) tibble with metadata information and position in
x, y and time.
\item \code{files_not_in_csv}: a list of files not present in csv filenames from zip files.
\item \code{files_not_in_metada}: a list of files not funded in metadata.
\item \code{duplicate_file_name_in_metadata}: a list of duplicated file names in metadata.
}

By default, the \code{resulting_data} slot is structured in 12 columns (The fifth ones are from zip files
and the other from metadata files).
\itemize{
\item File_name
\item The time in second (position is recorded every 0.2s)
\item The position in x (in mm)
\item The position in y (in mm)
\item Boolean variable indicating if the individual has remained immobile since the last record (1 if immobile)
\item Run number
\item Date
\item Start time
\item Farm
\item MiteMap number
\item Bag
\item Modality
}
}
\description{
Import MiteMapTools data
}
\examples{
mm_csv <- suppressWarnings(import_mitemap(
  system.file("extdata", "POUL6", package = "MiteMapTools")
))
dim(mm_csv$resulting_data)

mm_HH <- suppressWarnings(import_mitemap(
  system.file("extdata", "POUL6", package = "MiteMapTools"),
  type_of_files = "HH"
))
dim(mm_HH$resulting_data)

mm_xlsx <- suppressWarnings(import_mitemap(
  system.file("extdata", "POUL6", package = "MiteMapTools"),
  format_metadata = "xlsx"
))

dim(mm_xlsx$resulting_data)
}
\author{
Adrien TaudiÃ¨re
}
